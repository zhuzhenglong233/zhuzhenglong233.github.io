<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhuzhenglong233.github.io/"/>
  <updated>2018-07-09T09:13:11.412Z</updated>
  <id>http://zhuzhenglong233.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis 映射配置解析以及动态SQL配置案例</title>
    <link href="http://zhuzhenglong233.github.io/2018/04/05/MyBatis-%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90%E4%BB%A5%E5%8F%8A%E5%8A%A8%E6%80%81SQL%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B/"/>
    <id>http://zhuzhenglong233.github.io/2018/04/05/MyBatis-映射配置解析以及动态SQL配置案例/</id>
    <published>2018-04-05T13:21:59.000Z</published>
    <updated>2018-07-09T09:13:11.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-MyBatis-？"><a href="#什么是-MyBatis-？" class="headerlink" title="什么是 MyBatis ？"></a>什么是 MyBatis ？</h2><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p><h2 id="MyBatis的-Git-代码库"><a href="#MyBatis的-Git-代码库" class="headerlink" title="MyBatis的 Git 代码库"></a><a href="https://github.com/mybatis/mybatis-3/tree/master/src/site" target="_blank" rel="noopener">MyBatis的 Git 代码库</a></h2><h2 id="corp数据库全部表结构与数据"><a href="#corp数据库全部表结构与数据" class="headerlink" title="corp数据库全部表结构与数据"></a>corp数据库全部表结构与数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`corp`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`corp`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`corp`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`depa`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="string">`depa_name`</span> <span class="keyword">NVARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职员</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`emp`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="string">`emp_name`</span> <span class="keyword">NVARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`depa_id`</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职位</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`post`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">INT</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="string">`post_name`</span> <span class="keyword">NVARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职员职位</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`emp_post`</span> (</span><br><span class="line">  <span class="string">`emp_id`</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`post_id`</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`depa`</span>(<span class="string">`depa_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'销售部'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`depa`</span>(<span class="string">`depa_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'美工部'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span>(<span class="string">`emp_name`</span>,<span class="string">`depa_id`</span>) <span class="keyword">VALUES</span>(<span class="string">'张三'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span>(<span class="string">`emp_name`</span>,<span class="string">`depa_id`</span>) <span class="keyword">VALUES</span>(<span class="string">'李四'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span>(<span class="string">`emp_name`</span>,<span class="string">`depa_id`</span>) <span class="keyword">VALUES</span>(<span class="string">'王五'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp`</span>(<span class="string">`emp_name`</span>,<span class="string">`depa_id`</span>) <span class="keyword">VALUES</span>(<span class="string">'赵六'</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`post`</span>(<span class="string">`post_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'职员'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`post`</span>(<span class="string">`post_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'主管'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`post`</span>(<span class="string">`post_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'经理'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`post`</span>(<span class="string">`post_name`</span>) <span class="keyword">VALUES</span>(<span class="string">'部门经理'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp_post`</span>(<span class="string">`emp_id`</span>,<span class="string">`post_id`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp_post`</span>(<span class="string">`emp_id`</span>,<span class="string">`post_id`</span>) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp_post`</span>(<span class="string">`emp_id`</span>,<span class="string">`post_id`</span>) <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp_post`</span>(<span class="string">`emp_id`</span>,<span class="string">`post_id`</span>) <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`emp_post`</span>(<span class="string">`emp_id`</span>,<span class="string">`post_id`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`depa`</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`emp`</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`post`</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`emp_post`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`depa`</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`emp`</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`post`</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`emp_post`</span>;</span><br></pre></td></tr></table></figure><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Corp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MybatisUtil-Mybatis工具类"><a href="#MybatisUtil-Mybatis工具类" class="headerlink" title="MybatisUtil Mybatis工具类"></a>MybatisUtil Mybatis工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.openSession(<span class="keyword">false</span>);<span class="comment">//true为自动提交事务</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Depa-部门实体类"><a href="#Depa-部门实体类" class="headerlink" title="Depa 部门实体类"></a>Depa 部门实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Depa</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String depa_name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Emp&gt; emps = <span class="keyword">new</span> ArrayList&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Depa&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", depa_name='"</span> + depa_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", emps="</span> + emps +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDepa_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> depa_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDepa_name</span><span class="params">(String depa_name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.depa_name = depa_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">getEmps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmps</span><span class="params">(List&lt;Emp&gt; emps)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Depa-部门实体类-的实现接口-DepaDao-接口类"><a href="#对应-Depa-部门实体类-的实现接口-DepaDao-接口类" class="headerlink" title="对应 Depa 部门实体类 的实现接口 DepaDao 接口类"></a>对应 Depa 部门实体类 的实现接口 DepaDao 接口类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DepaDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Depa&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Depa-部门实体类-的映射配置文件-DepaMapper-xml"><a href="#对应-Depa-部门实体类-的映射配置文件-DepaMapper-xml" class="headerlink" title="对应 Depa 部门实体类 的映射配置文件 DepaMapper.xml"></a>对应 Depa 部门实体类 的映射配置文件 DepaMapper.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.dao.DepaDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;insert id=""&gt;&lt;/insert&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;delete id=""&gt;&lt;/delete&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;update id=""&gt;&lt;/update&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAll"</span> <span class="attr">resultMap</span>=<span class="string">"DepaMapper"</span>&gt;</span></span><br><span class="line">        SELECT *,e.`id` eId,d.`id` dId FROM depa d</span><br><span class="line">        INNER JOIN emp e ON d.`id`=e.`depa_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"DepaMapper"</span> <span class="attr">type</span>=<span class="string">"Depa"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"dId"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--收集 一对多--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"emps"</span> <span class="attr">javaType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">""</span> <span class="attr">property</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"eId"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Emp-职员实体类"><a href="#Emp-职员实体类" class="headerlink" title="Emp 职员实体类"></a>Emp 职员实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String emp_name;</span><br><span class="line">    <span class="keyword">private</span> Depa depa_id;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Post&gt; posts = <span class="keyword">new</span> ArrayList&lt;Post&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Emp&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", emp_name='"</span> + emp_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", depa_id="</span> + depa_id +</span><br><span class="line">                <span class="string">", posts="</span> + posts +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmp_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> emp_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmp_name</span><span class="params">(String emp_name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.emp_name = emp_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Depa <span class="title">getDepa_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> depa_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDepa_id</span><span class="params">(Depa depa_id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.depa_id = depa_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Post&gt; <span class="title">getPosts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPosts</span><span class="params">(List&lt;Post&gt; posts)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.posts = posts;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Emp-职员实体类-的实现接口-EmpDao-接口类"><a href="#对应-Emp-职员实体类-的实现接口-EmpDao-接口类" class="headerlink" title="对应 Emp 职员实体类 的实现接口 EmpDao 接口类"></a>对应 Emp 职员实体类 的实现接口 EmpDao 接口类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmpDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">saveOrUpdate</span><span class="params">(Emp emp)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">del</span><span class="params">(Integer[] idArray)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">getByNames</span><span class="params">(List names)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">getByIdAndNames</span><span class="params">(Map map)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Emp-职员实体类-的映射配置文件-EmpMapper-xml"><a href="#对应-Emp-职员实体类-的映射配置文件-EmpMapper-xml" class="headerlink" title="对应 Emp 职员实体类 的映射配置文件 EmpMapper.xml"></a>对应 Emp 职员实体类 的映射配置文件 EmpMapper.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;where&gt; 自动删除第一个 and 或者 or</span></span><br><span class="line"><span class="comment">        item 表示集合中每一个元素进行迭代时的别名</span></span><br><span class="line"><span class="comment">        open 表示该语句以什么开始</span></span><br><span class="line"><span class="comment">        separator 表示在每次进行迭代之间以什么符号作为分隔符</span></span><br><span class="line"><span class="comment">        close表示以什么结束</span></span><br><span class="line"><span class="comment">        如果传入的是单参数且参数类型是一个List的时候，collection属性值为list</span></span><br><span class="line"><span class="comment">        如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array</span></span><br><span class="line"><span class="comment">        如果传入的参数是多个的时候，就需要把它们封装成一个Map map的key就是参数名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"del"</span>&gt;</span></span><br><span class="line">        DELETE FROM emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">item</span>=<span class="string">"eId"</span>&gt;</span></span><br><span class="line">                OR id = #&#123;eId&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;set&gt; 自动去除最后的逗号 , --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"saveOrUpdate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"null != id"</span>&gt;</span></span><br><span class="line">            UPDATE emp</span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"null != emp_name"</span>&gt;</span></span><br><span class="line">                    emp_name = #&#123;emp_name&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"null != depa_id and null != depa_id.id"</span>&gt;</span></span><br><span class="line">                    depa_id = #&#123;depa_id.id&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">            where id = #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"null == id"</span>&gt;</span></span><br><span class="line">            INSERT INTO `emp`(`emp_name`,`depa_id`) VALUES(#&#123;emp_name&#125;,#&#123;depa_id.id&#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAll"</span> <span class="attr">resultMap</span>=<span class="string">"EmpMapper"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        prefix 前缀添加什么</span></span><br><span class="line"><span class="comment">        prefixOverrides 前缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">        suffix 后缀添加什么</span></span><br><span class="line"><span class="comment">        suffixOverrides 后缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">        &lt;trim prefix="WHERE" prefixOverrides="OR || AND"&gt; 等价 &lt;where&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getByNames"</span> <span class="attr">resultMap</span>=<span class="string">"EmpMapper"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"WHERE"</span> <span class="attr">prefixOverrides</span>=<span class="string">"OR || AND"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">                OR e.`emp_name` LIKE CONCAT('%',#&#123;name&#125;,'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    prefix 前缀添加什么</span></span><br><span class="line"><span class="comment">    prefixOverrides 前缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">    suffix 后缀添加什么</span></span><br><span class="line"><span class="comment">    suffixOverrides 后缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">    &lt;trim prefix="WHERE" prefixOverrides="OR || AND"&gt; 等价 &lt;where&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getByIdAndNames"</span> <span class="attr">resultMap</span>=<span class="string">"EmpMapper"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"WHERE"</span> <span class="attr">prefixOverrides</span>=<span class="string">"OR|AND"</span>&gt;</span></span><br><span class="line">            AND e.`id` = #&#123;mapIdName&#125; AND</span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefixOverrides</span>=<span class="string">"OR|AND"</span>&gt;</span></span><br><span class="line">            e.`emp_name` IN</span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"mapNameList"</span> <span class="attr">item</span>=<span class="string">"name"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">                #&#123;name&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"EmpMapper"</span> <span class="attr">type</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"emp_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--联合查询 一对一--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"depa_id"</span> <span class="attr">javaType</span>=<span class="string">"Depa"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"depa_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--收集 一对多--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"posts"</span> <span class="attr">javaType</span>=<span class="string">"Post"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"post_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Post-职位实体类"><a href="#Post-职位实体类" class="headerlink" title="Post 职位实体类"></a>Post 职位实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Post</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String post_name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Emp&gt; emps = <span class="keyword">new</span> ArrayList&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Post&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", post_name='"</span> + post_name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", emps="</span> + emps +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPost_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPost_name</span><span class="params">(String post_name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.post_name = post_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">getEmps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmps</span><span class="params">(List&lt;Emp&gt; emps)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Post-职位实体类-的实现接口-PostDao-接口类"><a href="#对应-Post-职位实体类-的实现接口-PostDao-接口类" class="headerlink" title="对应 Post 职位实体类 的实现接口 PostDao 接口类"></a>对应 Post 职位实体类 的实现接口 PostDao 接口类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PostDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Post&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对应-Post-职位实体类-的映射配置文件-PostMapper-xml"><a href="#对应-Post-职位实体类-的映射配置文件-PostMapper-xml" class="headerlink" title="对应 Post 职位实体类 的映射配置文件 PostMapper.xml"></a>对应 Post 职位实体类 的映射配置文件 PostMapper.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.dao.PostDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAll"</span> <span class="attr">resultMap</span>=<span class="string">"PostMapper"</span>&gt;</span></span><br><span class="line">        SELECT * FROM post p</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`post_id`=p.`id`</span><br><span class="line">        INNER JOIN emp e ON e.`id`=ep.`emp_id`</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"PostMapper"</span> <span class="attr">type</span>=<span class="string">"Post"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"post_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--联合查询 一对一--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"emps"</span> <span class="attr">javaType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"emp_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"depa_id"</span> <span class="attr">javaType</span>=<span class="string">"Depa"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"depa_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name="autoMappingBehavior" value="FULL"/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;result column="" property=""/&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mybatis-config-xml-MyBatis配置文件"><a href="#mybatis-config-xml-MyBatis配置文件" class="headerlink" title="mybatis-config.xml MyBatis配置文件"></a>mybatis-config.xml MyBatis配置文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可以配置在Java属性配置文件 *.properties 中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以配置键值对属性在这里而不用配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打印查询语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 局部的PARTIAL 禁止自动匹配NONE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"autoMappingBehavior"</span> <span class="attr">value</span>=<span class="string">"FULL"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为Java类型命名一个别名 alias 用于 mappers.xml 的 resultType 直接调用 不用写全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为一个Java类型命名一个别名--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="" alias=""/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.entity"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--环境变量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"simon"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/corp"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体类映射--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/entity/DepaMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/entity/EmpMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/entity/PostMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Test-测试类"><a href="#Test-测试类" class="headerlink" title="Test 测试类"></a>Test 测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.DepaDao;</span><br><span class="line"><span class="keyword">import</span> com.dao.EmpDao;</span><br><span class="line"><span class="keyword">import</span> com.dao.PostDao;</span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"><span class="keyword">import</span> com.util.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.getSession();</span><br><span class="line">        DepaDao depaDao = session.getMapper(DepaDao.class);</span><br><span class="line">        EmpDao empDao = session.getMapper(EmpDao.class);</span><br><span class="line">        PostDao postDao = session.getMapper(PostDao.class);</span><br><span class="line"></span><br><span class="line">        List&lt;Depa&gt; depaDaoAll = depaDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Depa depa : depaDaoAll) &#123;</span><br><span class="line">            System.out.println(depa);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"getByNames------三 || 四"</span>);</span><br><span class="line">        List&lt;Emp&gt; byNames = empDao.getByNames(Arrays.asList(<span class="string">"三"</span>, <span class="string">"四"</span>));</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : byNames) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        map.put(<span class="string">"mapIdName"</span>, <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">"mapNameList"</span>, Arrays.asList(<span class="string">"张三"</span>, <span class="string">"李四"</span>, <span class="string">"王五"</span>));</span><br><span class="line">        List&lt;Emp&gt; byIdAndNames = empDao.getByIdAndNames(map);</span><br><span class="line">        System.out.println(<span class="string">"byIdAndNames------"</span> + map);</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : byIdAndNames) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Emp simon = <span class="keyword">new</span> Emp();</span><br><span class="line">        simon.setId(<span class="number">1</span>);</span><br><span class="line">        simon.setEmp_name(<span class="string">"Simon"</span>);</span><br><span class="line">        Depa depa = <span class="keyword">new</span> Depa();</span><br><span class="line">        depa.setId(<span class="number">1</span>);</span><br><span class="line">        simon.setDepa_id(depa);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == empDao.saveOrUpdate(simon))</span><br><span class="line">            System.out.println(<span class="string">"saveOrUpdate-----false"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(<span class="string">"saveOrUpdate-----true"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Integer del = empDao.del(<span class="keyword">new</span> Integer[]&#123;<span class="number">2</span>, <span class="number">3</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == del)</span><br><span class="line">            System.out.println(<span class="string">"del-----false"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(<span class="string">"del-----true"</span>);</span><br><span class="line">        System.out.println(<span class="string">"del-----"</span> + del);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Emp&gt; empDaoAll = empDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : empDaoAll) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Post&gt; postDaoAll = postDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Post post : postDaoAll) &#123;</span><br><span class="line">            System.out.println(post);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制台输出结果"><a href="#控制台输出结果" class="headerlink" title="控制台输出结果"></a>控制台输出结果</h2><p><code>mybatis-config.xml</code> 配置 <code>&lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot;/&gt;</code> 控制台会打印执行的SQL语句以及得到的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT *,e.`id` eId,d.`id` dId FROM depa d INNER JOIN emp e ON d.`id`=e.`depa_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, depa_name, id, emp_name, depa_id, eId, dId</span><br><span class="line">&lt;==        Row: 1, 销售部, 2, 李四, 1, 2, 1</span><br><span class="line">&lt;==        Row: 1, 销售部, 3, 王五, 1, 3, 1</span><br><span class="line">&lt;==        Row: 1, 销售部, 4, 赵六, 1, 4, 1</span><br><span class="line">&lt;==        Row: 2, 美工部, 1, 张三, 2, 1, 2</span><br><span class="line">&lt;==      Total: 4</span><br><span class="line">Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[Emp&#123;id=2, emp_name=&apos;李四&apos;, depa_id=null, posts=[]&#125;, Emp&#123;id=3, emp_name=&apos;王五&apos;, depa_id=null, posts=[]&#125;, Emp&#123;id=4, emp_name=&apos;赵六&apos;, depa_id=null, posts=[]&#125;]&#125;</span><br><span class="line">Depa&#123;id=2, depa_name=&apos;美工部&apos;, emps=[Emp&#123;id=1, emp_name=&apos;张三&apos;, depa_id=null, posts=[]&#125;]&#125;</span><br><span class="line">getByNames------三 || 四</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id` WHERE e.`emp_name` LIKE CONCAT(&apos;%&apos;,?,&apos;%&apos;) OR e.`emp_name` LIKE CONCAT(&apos;%&apos;,?,&apos;%&apos;)</span><br><span class="line">==&gt; Parameters: 三(String), 四(String)</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 1, 张三, 2, 2, 美工部, 1, 1, 1, 职员</span><br><span class="line">&lt;==        Row: 2, 李四, 1, 1, 销售部, 2, 2, 2, 主管</span><br><span class="line">&lt;==        Row: 1, 张三, 2, 2, 美工部, 1, 4, 4, 部门经理</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Emp&#123;id=1, emp_name=&apos;张三&apos;, depa_id=Depa&#123;id=2, depa_name=&apos;美工部&apos;, emps=[]&#125;, posts=[Post&#123;id=1, post_name=&apos;职员&apos;, emps=[]&#125;, Post&#123;id=4, post_name=&apos;部门经理&apos;, emps=[]&#125;]&#125;</span><br><span class="line">Emp&#123;id=2, emp_name=&apos;李四&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[Post&#123;id=2, post_name=&apos;主管&apos;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id` WHERE e.`id` = ? AND e.`emp_name` IN ( ? , ? , ? )</span><br><span class="line">==&gt; Parameters: 2(Integer), 张三(String), 李四(String), 王五(String)</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 2, 李四, 1, 1, 销售部, 2, 2, 2, 主管</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">byIdAndNames------&#123;mapIdName=2, mapNameList=[张三, 李四, 王五]&#125;</span><br><span class="line">Emp&#123;id=2, emp_name=&apos;李四&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[Post&#123;id=2, post_name=&apos;主管&apos;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: UPDATE emp SET emp_name = ?, depa_id = ? where id = ?</span><br><span class="line">==&gt; Parameters: Simon(String), 1(Integer), 1(Integer)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">saveOrUpdate-----true</span><br><span class="line">==&gt;  Preparing: DELETE FROM emp WHERE id = ? OR id = ?</span><br><span class="line">==&gt; Parameters: 2(Integer), 3(Integer)</span><br><span class="line">&lt;==    Updates: 2</span><br><span class="line">del-----true</span><br><span class="line">del-----2</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 1, Simon, 1, 1, 销售部, 1, 1, 1, 职员</span><br><span class="line">&lt;==        Row: 4, 赵六, 1, 1, 销售部, 4, 4, 4, 部门经理</span><br><span class="line">&lt;==        Row: 1, Simon, 1, 1, 销售部, 1, 4, 4, 部门经理</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Emp&#123;id=1, emp_name=&apos;Simon&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[Post&#123;id=1, post_name=&apos;职员&apos;, emps=[]&#125;, Post&#123;id=4, post_name=&apos;部门经理&apos;, emps=[]&#125;]&#125;</span><br><span class="line">Emp&#123;id=4, emp_name=&apos;赵六&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[Post&#123;id=4, post_name=&apos;部门经理&apos;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: SELECT * FROM post p INNER JOIN emp_post ep ON ep.`post_id`=p.`id` INNER JOIN emp e ON e.`id`=ep.`emp_id` INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, post_name, emp_id, post_id, id, emp_name, depa_id, id, depa_name</span><br><span class="line">&lt;==        Row: 1, 职员, 1, 1, 1, Simon, 1, 1, 销售部</span><br><span class="line">&lt;==        Row: 4, 部门经理, 4, 4, 4, 赵六, 1, 1, 销售部</span><br><span class="line">&lt;==        Row: 4, 部门经理, 1, 4, 1, Simon, 1, 1, 销售部</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Post&#123;id=1, post_name=&apos;职员&apos;, emps=[Emp&#123;id=1, emp_name=&apos;Simon&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[]&#125;]&#125;</span><br><span class="line">Post&#123;id=4, post_name=&apos;部门经理&apos;, emps=[Emp&#123;id=4, emp_name=&apos;赵六&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[]&#125;, Emp&#123;id=1, emp_name=&apos;Simon&apos;, depa_id=Depa&#123;id=1, depa_name=&apos;销售部&apos;, emps=[]&#125;, posts=[]&#125;]&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是-MyBatis-？&quot;&gt;&lt;a href=&quot;#什么是-MyBatis-？&quot; class=&quot;headerlink&quot; title=&quot;什么是 MyBatis ？&quot;&gt;&lt;/a&gt;什么是 MyBatis ？&lt;/h2&gt;&lt;p&gt;MyBatis 是一款优秀的持久层框架，它支持定制化
      
    
    </summary>
    
      <category term="MyBatis" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/"/>
    
      <category term="XML" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/XML/"/>
    
      <category term="映射配置" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/XML/%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE/"/>
    
      <category term="动态SQL" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/XML/%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE/%E5%8A%A8%E6%80%81SQL/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="多对多" scheme="http://zhuzhenglong233.github.io/tags/%E5%A4%9A%E5%AF%B9%E5%A4%9A/"/>
    
      <category term="一对多" scheme="http://zhuzhenglong233.github.io/tags/%E4%B8%80%E5%AF%B9%E5%A4%9A/"/>
    
      <category term="多对一" scheme="http://zhuzhenglong233.github.io/tags/%E5%A4%9A%E5%AF%B9%E4%B8%80/"/>
    
      <category term="MySQL" scheme="http://zhuzhenglong233.github.io/tags/MySQL/"/>
    
      <category term="MyBatis" scheme="http://zhuzhenglong233.github.io/tags/MyBatis/"/>
    
      <category term="一对一" scheme="http://zhuzhenglong233.github.io/tags/%E4%B8%80%E5%AF%B9%E4%B8%80/"/>
    
      <category term="动态SQL" scheme="http://zhuzhenglong233.github.io/tags/%E5%8A%A8%E6%80%81SQL/"/>
    
      <category term="映射配置" scheme="http://zhuzhenglong233.github.io/tags/%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis框架映射文件配置以及配置文件详解</title>
    <link href="http://zhuzhenglong233.github.io/2018/04/03/MyBatis%E6%A1%86%E6%9E%B6%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://zhuzhenglong233.github.io/2018/04/03/MyBatis框架映射文件配置以及配置文件详解/</id>
    <published>2018-04-03T04:08:44.000Z</published>
    <updated>2018-07-10T02:03:52.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-MyBatis-？"><a href="#什么是-MyBatis-？" class="headerlink" title="什么是 MyBatis ？"></a>什么是 MyBatis ？</h2><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p><h2 id="MyBatis的-Git-代码库"><a href="#MyBatis的-Git-代码库" class="headerlink" title="MyBatis的 Git 代码库"></a><a href="https://github.com/mybatis/mybatis-3/tree/master/src/site" target="_blank" rel="noopener">MyBatis的 Git 代码库</a></h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><pre><code>ideajdkmavenMySQL</code></pre><h2 id="SMBMS-SQL-sql-创建数据库"><a href="#SMBMS-SQL-sql-创建数据库" class="headerlink" title="SMBMS_SQL.sql 创建数据库"></a>SMBMS_SQL.sql 创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库smbms</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> smbms;</span><br><span class="line"><span class="keyword">USE</span> smbms;</span><br><span class="line"><span class="comment">-- 供应商表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> smbms_provider(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>(<span class="number">20</span>) AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">proCode <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">proName <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">proDesc <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">proContact <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">proPhone <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">proAddress <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">proFax <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">createdBy <span class="built_in">INT</span>(<span class="number">20</span>),</span><br><span class="line">creationDate DATETIME,</span><br><span class="line">modifyBy <span class="built_in">INT</span>(<span class="number">20</span>),</span><br><span class="line">modifyDate DATETIME</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> <span class="string">`smbms_provider`</span>(<span class="string">`id`</span>,<span class="string">`proCode`</span>,<span class="string">`proName`</span>,<span class="string">`proDesc`</span>,<span class="string">`proContact`</span>,<span class="string">`proPhone`</span>,<span class="string">`proAddress`</span>,<span class="string">`proFax`</span>,<span class="string">`createdBy`</span>,<span class="string">`creationDate`</span>,<span class="string">`modifyDate`</span>,<span class="string">`modifyBy`</span>) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">'BJ_GYS001'</span>,<span class="string">'北京三木堂商贸有限公司'</span>,<span class="string">'长期合作伙伴，主营产品:茅台、五粮液、郎酒、酒鬼酒、泸州老窖、赖茅酒、法国红酒等'</span>,<span class="string">'张国强'</span>,<span class="string">'13566667777'</span>,<span class="string">'北京市丰台区育芳园北路'</span>,<span class="string">'010-58858787'</span>,<span class="number">1</span>,<span class="string">'2013-03-21 16:52:07'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> <span class="string">`smbms_provider`</span>(<span class="string">`id`</span>,<span class="string">`proCode`</span>,<span class="string">`proName`</span>,<span class="string">`proDesc`</span>,<span class="string">`proContact`</span>,<span class="string">`proPhone`</span>,<span class="string">`proAddress`</span>,<span class="string">`proFax`</span>,<span class="string">`createdBy`</span>,<span class="string">`creationDate`</span>,<span class="string">`modifyDate`</span>,<span class="string">`modifyBy`</span>) <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">'HB_GYS001'</span>,<span class="string">'石家庄帅益食品贸易有限公司'</span>,<span class="string">'长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等'</span>,<span class="string">'王军'</span>,<span class="string">'13309094212'</span>,<span class="string">'河北省石家庄新华区'</span>,<span class="string">'0311-67738876'</span>,<span class="number">1</span>,<span class="string">'2016-04-13 04:20:40'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> smbms_provider;</span><br></pre></td></tr></table></figure><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyBiatisLink<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MybatisUtil-创建访问数据库得到session对象工具类"><a href="#MybatisUtil-创建访问数据库得到session对象工具类" class="headerlink" title="MybatisUtil 创建访问数据库得到session对象工具类"></a>MybatisUtil 创建访问数据库得到session对象工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(<span class="string">"mybatis-config.xml"</span>);</span><br><span class="line">            sessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.openSession(<span class="keyword">false</span>);<span class="comment">//true为自动提交事务</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Provider-数据库对应的实体类"><a href="#Provider-数据库对应的实体类" class="headerlink" title="Provider 数据库对应的实体类"></a>Provider 数据库对应的实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Provider</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String proCode;</span><br><span class="line">    <span class="keyword">private</span> String proName;</span><br><span class="line">    <span class="keyword">private</span> String proDesc;</span><br><span class="line">    <span class="keyword">private</span> String proContact;</span><br><span class="line">    <span class="keyword">private</span> String proPhone;</span><br><span class="line">    <span class="keyword">private</span> String proAddress;</span><br><span class="line">    <span class="keyword">private</span> String proFax;</span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Provider&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", proCode='"</span> + proCode + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proName='"</span> + proName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proDesc='"</span> + proDesc + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proContact='"</span> + proContact + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proPhone='"</span> + proPhone + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proAddress='"</span> + proAddress + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", proFax='"</span> + proFax + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", createdBy="</span> + createdBy +</span><br><span class="line">                <span class="string">", creationDate="</span> + creationDate +</span><br><span class="line">                <span class="string">", modifyBy="</span> + modifyBy +</span><br><span class="line">                <span class="string">", modifyDate="</span> + modifyDate +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 省略getter and setter部分代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ProviderDao-创建实现访问数据库的接口"><a href="#ProviderDao-创建实现访问数据库的接口" class="headerlink" title="ProviderDao 创建实现访问数据库的接口"></a>ProviderDao 创建实现访问数据库的接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProviderDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Provider&gt; <span class="title">getProviderList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Provider&gt; <span class="title">getProviderByName</span><span class="params">(Provider provider)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Provider-xml-Provider对象与数据库的映射文件配置"><a href="#Provider-xml-Provider对象与数据库的映射文件配置" class="headerlink" title="Provider.xml Provider对象与数据库的映射文件配置"></a>Provider.xml Provider对象与数据库的映射文件配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.dao.ProviderDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--为一个Java类型命名一个别名 aliasProvider--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getProviderList"</span> <span class="attr">resultType</span>=<span class="string">"aliasProvider"</span>&gt;</span></span><br><span class="line">        SELECT * FROM smbms_provider</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--ProviderDao 参数为对象 得到对象的属性值方式 #&#123;对象的属性值&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getProviderByName"</span> <span class="attr">resultType</span>=<span class="string">"Provider"</span>&gt;</span></span><br><span class="line">        SELECT * FROM smbms_provider WHERE proName LIKE CONCAT('%',#&#123;proName&#125;,'%')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="datebase-properties-数据库配置文件"><a href="#datebase-properties-数据库配置文件" class="headerlink" title="datebase.properties 数据库配置文件"></a>datebase.properties 数据库配置文件</h2><p>有需要可以加上配置文件,或者直接将数据填到 <code>MyBatis上下文配置</code> mybatis-config.xml 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqlusername=root</span><br><span class="line">mysqlpassword=simon</span><br><span class="line">datebase=smbms</span><br></pre></td></tr></table></figure><h2 id="mybatis-config-xml-连接数据库的MyBatis上下文配置"><a href="#mybatis-config-xml-连接数据库的MyBatis上下文配置" class="headerlink" title="mybatis-config.xml 连接数据库的MyBatis上下文配置"></a>mybatis-config.xml 连接数据库的MyBatis上下文配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可以配置在Java属性配置文件中 用 $&#123;键值&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"datebase.properties"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以配置键值对属性在这里而不用配置文件</span></span><br><span class="line"><span class="comment">        &lt;property name="mysqldriver" value="com.mysql.jdbc.Driver"/&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="mysqlurl" value="jdbc:mysql://localhost:3306/"/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打印查询语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为Java类型命名一个别名 alias 用于 mappers.xml 的 resultType 直接调用 不用写全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为一个Java类型命名一个别名--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type="com.entity.Provider" alias="aliasProvider"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.smbms.entity"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--环境变量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlUsername&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlPassword&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlDriver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlUrl&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体类映射--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"cn.smbms.entity.SmbmsAddress"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"cn.smbms.entity.SmbmsBill"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"cn.smbms.entity.SmbmsProvider"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"cn.smbms.entity.SmbmsRole"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"cn.smbms.entity.SmbmsUser"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Test-测试类"><a href="#Test-测试类" class="headerlink" title="Test 测试类"></a>Test 测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.ProviderDao;</span><br><span class="line"><span class="keyword">import</span> com.entity.Provider;</span><br><span class="line"><span class="keyword">import</span> com.util.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.getSession();</span><br><span class="line"><span class="comment">//        直接去 Mapper.xml 得到数据访问数据库 参数为 namespace.id</span></span><br><span class="line">        List&lt;Provider&gt; objects = session.selectList(<span class="string">"com.dao.ProviderDao.getProviderList"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"-----------------------------面向对象的方式访问数据库-----------------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        面向对象的方式访问数据库</span></span><br><span class="line">        ProviderDao providerDao = session.getMapper(ProviderDao.class);</span><br><span class="line">        objects = providerDao.getProviderList();</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"-----------------------------ProviderDao接口带参数 实现带参数查询-----------------------------"</span>);</span><br><span class="line"></span><br><span class="line">        Provider p = <span class="keyword">new</span> Provider();</span><br><span class="line">        p.setProName(<span class="string">"石"</span>);</span><br><span class="line">        objects = providerDao.getProviderByName(p);</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        关闭会话</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击下载案例"><a href="#点击下载案例" class="headerlink" title="点击下载案例"></a><a href="https://gitee.com/admin-simon/MyBiatisLink/repository/archive/master.zip" target="_blank" rel="noopener">点击下载案例</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是-MyBatis-？&quot;&gt;&lt;a href=&quot;#什么是-MyBatis-？&quot; class=&quot;headerlink&quot; title=&quot;什么是 MyBatis ？&quot;&gt;&lt;/a&gt;什么是 MyBatis ？&lt;/h2&gt;&lt;p&gt;MyBatis 是一款优秀的持久层框架，它支持定制化
      
    
    </summary>
    
      <category term="MyBatis" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/"/>
    
      <category term="MySQL" scheme="http://zhuzhenglong233.github.io/categories/MyBatis/MySQL/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="关系映射" scheme="http://zhuzhenglong233.github.io/tags/%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/"/>
    
      <category term="MySQL" scheme="http://zhuzhenglong233.github.io/tags/MySQL/"/>
    
      <category term="MyBatis" scheme="http://zhuzhenglong233.github.io/tags/MyBatis/"/>
    
      <category term="配置文件" scheme="http://zhuzhenglong233.github.io/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate 多对多 一对多 多对一  配置解析案例</title>
    <link href="http://zhuzhenglong233.github.io/2017/10/28/Hibernate-%E5%A4%9A%E5%AF%B9%E5%A4%9A-%E4%B8%80%E5%AF%B9%E5%A4%9A-%E5%A4%9A%E5%AF%B9%E4%B8%80-%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90%E6%A1%88%E4%BE%8B/"/>
    <id>http://zhuzhenglong233.github.io/2017/10/28/Hibernate-多对多-一对多-多对一-配置解析案例/</id>
    <published>2017-10-28T02:52:01.000Z</published>
    <updated>2018-07-09T09:13:02.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="此案例用于理解脏检查-以及Hibernate关系映射的配置"><a href="#此案例用于理解脏检查-以及Hibernate关系映射的配置" class="headerlink" title="此案例用于理解脏检查,以及Hibernate关系映射的配置"></a>此案例用于理解脏检查,以及Hibernate关系映射的配置</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HibernateCase<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.hynnet/oracle-driver-ojdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据库的关系"><a href="#数据库的关系" class="headerlink" title="数据库的关系"></a>数据库的关系</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--部门</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> depa(</span><br><span class="line">    <span class="keyword">ID</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">NAME</span> <span class="keyword">NVARCHAR2</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职员</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">    <span class="keyword">ID</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">NAME</span> <span class="keyword">NVARCHAR2</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    depa_id <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职位</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> post(</span><br><span class="line">    <span class="keyword">ID</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">NAME</span> <span class="keyword">NVARCHAR2</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职员职位</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp_post(</span><br><span class="line">    emp_id <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    post_id <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>emp_post</code> 职员职位表为中间表,实体类可以不存在</p><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><h3 id="Depa"><a href="#Depa" class="headerlink" title="Depa"></a>Depa</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Depa</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Emp&gt; emps = <span class="keyword">new</span> HashSet&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Depa&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Emp&gt; <span class="title">getEmps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmps</span><span class="params">(Set&lt;Emp&gt; emps)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Emp"><a href="#Emp" class="headerlink" title="Emp"></a>Emp</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Depa depaid;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Post&gt; posts = <span class="keyword">new</span> HashSet&lt;Post&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Emp&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Post&gt; <span class="title">getPosts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPosts</span><span class="params">(Set&lt;Post&gt; posts)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.posts = posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Depa <span class="title">getDepaid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> depaid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDepaid</span><span class="params">(Depa depaid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.depaid = depaid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Post</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Emp&gt; emps = <span class="keyword">new</span> HashSet&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Post&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Emp&gt; <span class="title">getEmps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmps</span><span class="params">(Set&lt;Emp&gt; emps)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Emp</code> 实体类 和 <code>Post</code> 实体类 都有对方的 <code>Set&lt;?&gt;</code> 集合,这也是操作中间表 <code>emp_post</code> 的关键属性</p><h2 id="对实体类关系映射配置"><a href="#对实体类关系映射配置" class="headerlink" title="对实体类关系映射配置"></a>对实体类关系映射配置</h2><h3 id="depa-hbm-xml"><a href="#depa-hbm-xml" class="headerlink" title="depa.hbm.xml"></a>depa.hbm.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.entity"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Depa"</span> <span class="attr">table</span>=<span class="string">"depa"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对多 name为实体类属性名 class为对应外键对应实体类--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--table 实体类对象数据来源数据库表名 cascade维护方式--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--inverse 指定由哪一方来维护之间的关联关系 当一方中指定了"inverse=false"(默认),那么那一方就有责任负责之间的关联关系--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"emps"</span> <span class="attr">table</span>=<span class="string">"emp"</span> <span class="attr">cascade</span>=<span class="string">"all"</span> <span class="attr">inverse</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为emp数据库关联depa的外键名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"depa_id"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class emps的单个实体数据为哪个实体类--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"Emp"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="emp-hbm-xml"><a href="#emp-hbm-xml" class="headerlink" title="emp.hbm.xml"></a>emp.hbm.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--package为命名空间 子节点有多个类的全在com.entity包里--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--(如果不写,下面 &lt;class name="Emp" name值"Emp"需要改成"com.entity.Emp")--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.entity"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Emp"</span> <span class="attr">table</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--主键--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--自增方式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--普通数据列--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对一 name为实体类属性名 class为对应外键对应实体类 column为数据库外键名(如果与name值一样可以忽略)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"depaid"</span> <span class="attr">class</span>=<span class="string">"Depa"</span> <span class="attr">column</span>=<span class="string">"depa_id"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对多 name为实体类属性名 table 关联的中间表 cascade 维护方式 save-update 为维护方式是新增或修改--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"posts"</span> <span class="attr">table</span>=<span class="string">"emp_post"</span> <span class="attr">cascade</span>=<span class="string">"save-update"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--中间表emp_post 对应emp的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"emp_id"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class 多对多的实体类 column 中间表emp_post 对应Post的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"Post"</span> <span class="attr">column</span>=<span class="string">"post_id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="post-hbm-xml"><a href="#post-hbm-xml" class="headerlink" title="post.hbm.xml"></a>post.hbm.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.entity"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Post"</span> <span class="attr">table</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对多 name为实体类属性名 table 关联的中间表 cascade 维护方式 save-update 为维护方式是新增或修改--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"emps"</span> <span class="attr">table</span>=<span class="string">"emp_post"</span> <span class="attr">cascade</span>=<span class="string">"save-update"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--中间表emp_post 对应post的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"post_id"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class 多对多的实体类 column 中间表emp_post 对应Emp的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"Emp"</span> <span class="attr">column</span>=<span class="string">"emp_id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将实体类的 <code>XML</code> 映射到 hibernate.cfg.xml 配置</p><h3 id="hibernate-cfg-xml"><a href="#hibernate-cfg-xml" class="headerlink" title="hibernate.cfg.xml"></a>hibernate.cfg.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-configuration PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.url"</span>&gt;</span>jdbc:oracle:thin:@localhost:1521:orcl<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.username"</span>&gt;</span>system<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.password"</span>&gt;</span>simon<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.driver_class"</span>&gt;</span>oracle.jdbc.driver.OracleDriver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"current_session_context_class"</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"format_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/entity/depa.hbm.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/entity/emp.hbm.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/entity/post.hbm.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Hibernate工具类-HibernateUtil"><a href="#Hibernate工具类-HibernateUtil" class="headerlink" title="Hibernate工具类 HibernateUtil"></a>Hibernate工具类 HibernateUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SessionFactory factory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        configuration = <span class="keyword">new</span> Configuration().configure(<span class="string">"hibernate.cfg.xml"</span>);</span><br><span class="line">        factory = configuration.buildSessionFactory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> factory.getCurrentSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试类-Test"><a href="#测试类-Test" class="headerlink" title="测试类 Test"></a>测试类 Test</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"><span class="keyword">import</span> com.util.HibernateUtil;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Session session = HibernateUtil.getSession();</span><br><span class="line">        Transaction transaction = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为1的职员数据"</span>);</span><br><span class="line">        Emp emp = session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"通过职员得到中间表emp_post数据"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Post post : emp.getPosts()) &#123;</span><br><span class="line">            System.out.println(post);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"清除职员中间表emp_post的数据"</span>);</span><br><span class="line">        emp.getPosts().clear();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为2的职位数据"</span>);</span><br><span class="line">        Post post = session.get(Post.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(post);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"将查到的职位给职员新增中间表emp_post数据"</span>);</span><br><span class="line">        emp.getPosts().add(post);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为1的职员数据"</span>);</span><br><span class="line">        emp = session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"通过职员得到中间表emp_post数据"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Post temp : emp.getPosts()) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"通过职员得到部门表depa数据"</span>);</span><br><span class="line">        System.out.println(emp.getDepaid());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为1的部门数据"</span>);</span><br><span class="line">        Depa depa = session.get(Depa.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"将查到的部门depa给职员emp利用脏检查修改"</span>);</span><br><span class="line">        emp.setDepaid(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为1的职员数据"</span>);</span><br><span class="line">        emp = session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"通过职员得到部门表depa数据"</span>);</span><br><span class="line">        System.out.println(emp.getDepaid());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为2的部门数据"</span>);</span><br><span class="line">        depa = session.get(Depa.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"得到部门对象所属职员"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Emp e : depa.getEmps()) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"利用脏检查删除部门对象所属的ID为1的职员"</span>);</span><br><span class="line">        depa.getEmps().remove(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"查询ID为2的部门数据"</span>);</span><br><span class="line">        depa = session.get(Depa.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"得到部门对象所属职员"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Emp e : depa.getEmps()) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不提交,则上面的结果不会对数据库执行操作</span></span><br><span class="line"><span class="comment">//        transaction.commit();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h2><p>看看测试类代码对数据库的数据进行了哪些操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">查询ID为1的职员数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        emp0_.id as id1_1_0_,</span><br><span class="line">        emp0_.name as name2_1_0_,</span><br><span class="line">        emp0_.depa_id as depa_id3_1_0_</span><br><span class="line">    from</span><br><span class="line">        emp emp0_</span><br><span class="line">    where</span><br><span class="line">        emp0_.id=?</span><br><span class="line">Emp&#123;id=1, name=&apos;张三&apos;&#125;</span><br><span class="line">通过职员得到中间表emp_post数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        posts0_.emp_id as emp_id1_2_0_,</span><br><span class="line">        posts0_.post_id as post_id2_2_0_,</span><br><span class="line">        post1_.id as id1_3_1_,</span><br><span class="line">        post1_.name as name2_3_1_</span><br><span class="line">    from</span><br><span class="line">        emp_post posts0_</span><br><span class="line">    inner join</span><br><span class="line">        post post1_</span><br><span class="line">            on posts0_.post_id=post1_.id</span><br><span class="line">    where</span><br><span class="line">        posts0_.emp_id=?</span><br><span class="line">Post&#123;id=1, name=&apos;职员&apos;&#125;</span><br><span class="line">清除职员中间表emp_post的数据</span><br><span class="line">查询ID为2的职位数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        post0_.id as id1_3_0_,</span><br><span class="line">        post0_.name as name2_3_0_</span><br><span class="line">    from</span><br><span class="line">        post post0_</span><br><span class="line">    where</span><br><span class="line">        post0_.id=?</span><br><span class="line">Post&#123;id=2, name=&apos;主管&apos;&#125;</span><br><span class="line">将查到的职位给职员新增中间表emp_post数据</span><br><span class="line">查询ID为1的职员数据</span><br><span class="line">Emp&#123;id=1, name=&apos;张三&apos;&#125;</span><br><span class="line">通过职员得到中间表emp_post数据</span><br><span class="line">Post&#123;id=2, name=&apos;主管&apos;&#125;</span><br><span class="line">通过职员得到部门表depa数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        depa0_.id as id1_0_0_,</span><br><span class="line">        depa0_.name as name2_0_0_</span><br><span class="line">    from</span><br><span class="line">        depa depa0_</span><br><span class="line">    where</span><br><span class="line">        depa0_.id=?</span><br><span class="line">Depa&#123;id=2, name=&apos;美工部&apos;&#125;</span><br><span class="line">查询ID为1的部门数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        depa0_.id as id1_0_0_,</span><br><span class="line">        depa0_.name as name2_0_0_</span><br><span class="line">    from</span><br><span class="line">        depa depa0_</span><br><span class="line">    where</span><br><span class="line">        depa0_.id=?</span><br><span class="line">Depa&#123;id=1, name=&apos;销售部&apos;&#125;</span><br><span class="line">将查到的部门depa给职员emp利用脏检查修改</span><br><span class="line">查询ID为1的职员数据</span><br><span class="line">Emp&#123;id=1, name=&apos;张三&apos;&#125;</span><br><span class="line">通过职员得到部门表depa数据</span><br><span class="line">Depa&#123;id=1, name=&apos;销售部&apos;&#125;</span><br><span class="line">查询ID为2的部门数据</span><br><span class="line">Depa&#123;id=2, name=&apos;美工部&apos;&#125;</span><br><span class="line">得到部门对象所属职员</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        emps0_.depa_id as depa_id3_1_0_,</span><br><span class="line">        emps0_.id as id1_1_0_,</span><br><span class="line">        emps0_.id as id1_1_1_,</span><br><span class="line">        emps0_.name as name2_1_1_,</span><br><span class="line">        emps0_.depa_id as depa_id3_1_1_</span><br><span class="line">    from</span><br><span class="line">        emp emps0_</span><br><span class="line">    where</span><br><span class="line">        emps0_.depa_id=?</span><br><span class="line">Emp&#123;id=1, name=&apos;张三&apos;&#125;</span><br><span class="line">利用脏检查删除部门对象所属的ID为1的职员</span><br><span class="line">查询ID为2的部门数据</span><br><span class="line">Depa&#123;id=2, name=&apos;美工部&apos;&#125;</span><br><span class="line">得到部门对象所属职员</span><br></pre></td></tr></table></figure><h2 id="点击下载案例"><a href="#点击下载案例" class="headerlink" title="点击下载案例"></a><a href="https://gitee.com/admin-simon/HibernateCase/repository/archive/master.zip" target="_blank" rel="noopener">点击下载案例</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;此案例用于理解脏检查-以及Hibernate关系映射的配置&quot;&gt;&lt;a href=&quot;#此案例用于理解脏检查-以及Hibernate关系映射的配置&quot; class=&quot;headerlink&quot; title=&quot;此案例用于理解脏检查,以及Hibernate关系映射的配置&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
      <category term="关系映射" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="Oracle" scheme="http://zhuzhenglong233.github.io/tags/Oracle/"/>
    
      <category term="多对多" scheme="http://zhuzhenglong233.github.io/tags/%E5%A4%9A%E5%AF%B9%E5%A4%9A/"/>
    
      <category term="一对多" scheme="http://zhuzhenglong233.github.io/tags/%E4%B8%80%E5%AF%B9%E5%A4%9A/"/>
    
      <category term="多对一" scheme="http://zhuzhenglong233.github.io/tags/%E5%A4%9A%E5%AF%B9%E4%B8%80/"/>
    
      <category term="many-to-many" scheme="http://zhuzhenglong233.github.io/tags/many-to-many/"/>
    
      <category term="many-to-one" scheme="http://zhuzhenglong233.github.io/tags/many-to-one/"/>
    
      <category term="one-to-many" scheme="http://zhuzhenglong233.github.io/tags/one-to-many/"/>
    
      <category term="关系映射" scheme="http://zhuzhenglong233.github.io/tags/%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate 主键 ID 生成方式</title>
    <link href="http://zhuzhenglong233.github.io/2017/09/28/Hibernate-%E4%B8%BB%E9%94%AE-ID-%E7%94%9F%E6%88%90%E6%96%B9%E5%BC%8F/"/>
    <id>http://zhuzhenglong233.github.io/2017/09/28/Hibernate-主键-ID-生成方式/</id>
    <published>2017-09-28T01:38:53.000Z</published>
    <updated>2018-07-09T09:13:00.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ID生成方式"><a href="#ID生成方式" class="headerlink" title="ID生成方式"></a>ID生成方式</h2><h2 id="序列sequence-只适用于Oracle"><a href="#序列sequence-只适用于Oracle" class="headerlink" title="序列sequence 只适用于Oracle"></a>序列sequence 只适用于Oracle</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"sequence"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"sequence"</span>&gt;</span>person_seq<span class="tag">&lt;/<span class="name">param</span>&gt;</span><span class="comment">&lt;!--指定sequence名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自增列，适用于SQLServer、MySql"><a href="#自增列，适用于SQLServer、MySql" class="headerlink" title="自增列，适用于SQLServer、MySql"></a>自增列，适用于SQLServer、MySql</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"identity"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="取最大值加一-max-1"><a href="#取最大值加一-max-1" class="headerlink" title="取最大值加一 max()+1"></a>取最大值加一 max()+1</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"integer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="根据底层数据库指定生成方法"><a href="#根据底层数据库指定生成方法" class="headerlink" title="根据底层数据库指定生成方法"></a>根据底层数据库指定生成方法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用缺省策略<br>针对Oracle数据库的生成方式还是sequence，只不过需要一个特定名字的sequence，”hibernate_sequence”。</p><h2 id="高低位算法"><a href="#高低位算法" class="headerlink" title="高低位算法"></a>高低位算法</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"hilo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"table"</span>&gt;</span>high_value<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置高位值取值的表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"column"</span>&gt;</span>next_value<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置高位值取值的字段--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"max_lo"</span>&gt;</span>50<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定低位最大值，当取道最大值是会再取一个高位值再运算--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Oracle数据库注解-sequence-数据库序列定义"><a href="#Oracle数据库注解-sequence-数据库序列定义" class="headerlink" title="Oracle数据库注解 sequence 数据库序列定义"></a>Oracle数据库注解 sequence 数据库序列定义</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SequenceGenerator</span>(name = <span class="string">"sequenceInfo"</span>, sequenceName = <span class="string">"SEQ_name"</span>)</span><br><span class="line"><span class="meta">@GeneratedValue</span>(generator = <span class="string">"sequenceInfo"</span>)</span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@Column</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br></pre></td></tr></table></figure><p><code>SEQ_name</code> 为Oracle数据库序列名</p><h1 id="Oracle数据库XML-sequence-数据库序列定义"><a href="#Oracle数据库XML-sequence-数据库序列定义" class="headerlink" title="Oracle数据库XML sequence 数据库序列定义"></a>Oracle数据库XML sequence 数据库序列定义</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--package为命名空间 子节点有多个类的全在com.entity包里--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--(如果不写,下面 &lt;class name="Emp" name值"Emp"需要改成全限定类名(绝对路径)"com.entity.Emp")--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.entity"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Emp"</span> <span class="attr">table</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--主键--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--自增方式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"sequence"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"sequence"</span>&gt;</span>SEQ_name<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ID生成方式&quot;&gt;&lt;a href=&quot;#ID生成方式&quot; class=&quot;headerlink&quot; title=&quot;ID生成方式&quot;&gt;&lt;/a&gt;ID生成方式&lt;/h2&gt;&lt;h2 id=&quot;序列sequence-只适用于Oracle&quot;&gt;&lt;a href=&quot;#序列sequence-只适用于O
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
      <category term="XML" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/XML/"/>
    
      <category term="主键" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/XML/%E4%B8%BB%E9%94%AE/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="主键" scheme="http://zhuzhenglong233.github.io/tags/%E4%B8%BB%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Java中继承与多态实例</title>
    <link href="http://zhuzhenglong233.github.io/2017/07/04/Java%E4%B8%AD%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%9A%E6%80%81%E5%AE%9E%E4%BE%8B/"/>
    <id>http://zhuzhenglong233.github.io/2017/07/04/Java中继承与多态实例/</id>
    <published>2017-07-04T04:03:55.000Z</published>
    <updated>2018-07-09T09:13:10.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="继承的概念"><a href="#继承的概念" class="headerlink" title="继承的概念"></a>继承的概念</h2><p>继承是面向对象最显著的一个特性。继承是从已有的类中派生出新的类，新的类能吸收已有类的数据属性和行为，并能扩展新的能力。子类又被称为派生类； 父类又被称为超类（Super Class）。一个子类只能够继承一个父类，存在单继承局限。 在一个子类继承的时候，实际上会继承父类之中的所有操作（属性、方法），但是需要注意的是，对于所有的非私有（no private）操作属于显式继承（可以直接利用对象操作），而所有的私有操作属于隐式继承（间接完成）。在继承关系之中，如果要实例化子类对象，会默认先调用父类构造，为父类之中的属性初始化，之后再调用子类构造，为子类之中的属性初始化，即：默认情况下，子类会找到父类之中的无参构造方法。</p><h2 id="用于理解的demo"><a href="#用于理解的demo" class="headerlink" title="用于理解的demo"></a>用于理解的demo</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(D obj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"A and D"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"A and A"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(B obj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"B and B"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"B and A"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">A a1 = <span class="keyword">new</span> A();</span><br><span class="line">A a2 = <span class="keyword">new</span> B();</span><br><span class="line">B b = <span class="keyword">new</span> B();</span><br><span class="line">C c = <span class="keyword">new</span> C();</span><br><span class="line">D d = <span class="keyword">new</span> D();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"1--"</span> + a1.show(b));</span><br><span class="line">System.out.println(<span class="string">"2--"</span> + a1.show(c));</span><br><span class="line">System.out.println(<span class="string">"3--"</span> + a1.show(d));</span><br><span class="line">System.out.println(<span class="string">"4--"</span> + a2.show(b));</span><br><span class="line">System.out.println(<span class="string">"5--"</span> + a2.show(c));</span><br><span class="line">System.out.println(<span class="string">"6--"</span> + a2.show(d));</span><br><span class="line">System.out.println(<span class="string">"7--"</span> + b.show(b));</span><br><span class="line">System.out.println(<span class="string">"8--"</span> + b.show(c));</span><br><span class="line">System.out.println(<span class="string">"9--"</span> + b.show(d));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制台输出结果"><a href="#控制台输出结果" class="headerlink" title="控制台输出结果"></a>控制台输出结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1--A and A</span><br><span class="line">2--A and A</span><br><span class="line">3--A and D</span><br><span class="line">4--B and A</span><br><span class="line">5--B and A</span><br><span class="line">6--A and D</span><br><span class="line">7--B and B</span><br><span class="line">8--B and B</span><br><span class="line">9--A and D</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;继承的概念&quot;&gt;&lt;a href=&quot;#继承的概念&quot; class=&quot;headerlink&quot; title=&quot;继承的概念&quot;&gt;&lt;/a&gt;继承的概念&lt;/h2&gt;&lt;p&gt;继承是面向对象最显著的一个特性。继承是从已有的类中派生出新的类，新的类能吸收已有类的数据属性和行为，并能扩展新的能力
      
    
    </summary>
    
      <category term="Java" scheme="http://zhuzhenglong233.github.io/categories/Java/"/>
    
      <category term="extends" scheme="http://zhuzhenglong233.github.io/categories/Java/extends/"/>
    
    
      <category term="Java" scheme="http://zhuzhenglong233.github.io/tags/Java/"/>
    
      <category term="继承" scheme="http://zhuzhenglong233.github.io/tags/%E7%BB%A7%E6%89%BF/"/>
    
      <category term="多态" scheme="http://zhuzhenglong233.github.io/tags/%E5%A4%9A%E6%80%81/"/>
    
      <category term="extends" scheme="http://zhuzhenglong233.github.io/tags/extends/"/>
    
      <category term="重写" scheme="http://zhuzhenglong233.github.io/tags/%E9%87%8D%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>Struts2如何在Action与JSP之间传值</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/29/Struts2%E5%A6%82%E4%BD%95%E5%9C%A8Action%E4%B8%8EJSP%E4%B9%8B%E9%97%B4%E4%BC%A0%E5%80%BC/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/29/Struts2如何在Action与JSP之间传值/</id>
    <published>2017-06-29T11:39:38.000Z</published>
    <updated>2018-07-09T09:13:05.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="struts2中Action到底是什么，怎么理解"><a href="#struts2中Action到底是什么，怎么理解" class="headerlink" title="struts2中Action到底是什么，怎么理解"></a>struts2中Action到底是什么，怎么理解</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><h4 id="struts2中Action到底是什么，怎么理解-1"><a href="#struts2中Action到底是什么，怎么理解-1" class="headerlink" title="struts2中Action到底是什么，怎么理解"></a>struts2中Action到底是什么，怎么理解</h4><p>1.配置完web.xml<br>2.创建视图页面login.jsp<br>3.创建业务控制器LoginAction类<br>（解释说：创建业务控制器LoginAction类，该类为程序的Action类）<br>4.配置LoginAction类<br>（解释说：当Action处理完客户端请求后返回一个字符串，没个字符串对应一个视图）</p><p>那么这个Action到底是什么，是一个类吗？怎么理解它，它和用于标签的有什么区别。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>首先，你了解Servlet么？Servlet是运行在java服务器端的java代码，这个Action本质就是Servlet啊。它作为java web应用的控制层，它完成浏览器的请求后返回一个页面给客户端浏览器。<br>其次，action的处理流程是由strut2的中央控制器完成的，Action处理完客户端请求后返回一个字符串，每个字符串对应一个视图，也就是说它处理浏览器的请求的过程，返回的视图本质就是jsp页面。<br>结论就是：action的本质就是Servlet。</p><h2 id="Struts2如何在Action与JSP之间传值"><a href="#Struts2如何在Action与JSP之间传值" class="headerlink" title="Struts2如何在Action与JSP之间传值"></a>Struts2如何在Action与JSP之间传值</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>ActionValueOf<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ActionValueOf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="User-用户实体类"><a href="#User-用户实体类" class="headerlink" title="User 用户实体类"></a>User 用户实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InfoAction"><a href="#InfoAction" class="headerlink" title="InfoAction"></a>InfoAction</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InfoAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> User user = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h3><p><code>index.jsp</code> 只用于打开页面时先进入 <code>action</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--meta标签在</span> <span class="attr">index.jsp</span> 打开后跳转到指定的 <span class="attr">action--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0; url=info.action"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="info-jsp"><a href="#info-jsp" class="headerlink" title="info.jsp"></a>info.jsp</h3><p><code>info.jsp</code> 用一个页面来实现与 <code>action</code> 的相互传值,其中用 <code>OGNL</code> 来提取 <code>action</code> 实体类的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"info.action"</span>&gt;</span></span><br><span class="line">    用户名 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.username"</span> <span class="attr">value</span>=<span class="string">"&lt;s:property value="</span><span class="attr">user.username</span>"/&gt;</span>"/&gt;</span><br><span class="line">    密　码 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"user.password"</span> <span class="attr">value</span>=<span class="string">"&lt;s:property value="</span><span class="attr">user.password</span>"/&gt;</span>"/&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"info.action?user.username=Simon&amp;user.password=password"</span>&gt;</span>利用script get方式进入action<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户名 : <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"user.username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>密　码 : <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"user.password"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="struts-xml-配置文件"><a href="#struts-xml-配置文件" class="headerlink" title="struts.xml 配置文件"></a>struts.xml 配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span><br><span class="line"><span class="meta">        "http://struts.apache.org/dtds/struts-2.3.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"info"</span> <span class="attr">class</span>=<span class="string">"action.InfoAction"</span> <span class="attr">method</span>=<span class="string">"execute"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>info.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web-xml-配置"><a href="#web-xml-配置" class="headerlink" title="web.xml 配置"></a>web.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"2.4"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="点击下载案例"><a href="#点击下载案例" class="headerlink" title="点击下载案例"></a><a href="https://gitee.com/admin-simon/ActionValueOfDemo/repository/archive/master.zip" target="_blank" rel="noopener">点击下载案例</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;struts2中Action到底是什么，怎么理解&quot;&gt;&lt;a href=&quot;#struts2中Action到底是什么，怎么理解&quot; class=&quot;headerlink&quot; title=&quot;struts2中Action到底是什么，怎么理解&quot;&gt;&lt;/a&gt;struts2中Action
      
    
    </summary>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/categories/Struts2/"/>
    
      <category term="Action" scheme="http://zhuzhenglong233.github.io/categories/Struts2/Action/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="OGNL" scheme="http://zhuzhenglong233.github.io/tags/OGNL/"/>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/tags/Struts2/"/>
    
      <category term="Action" scheme="http://zhuzhenglong233.github.io/tags/Action/"/>
    
      <category term="传值" scheme="http://zhuzhenglong233.github.io/tags/%E4%BC%A0%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate主键自增长increment</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/18/Hibernate%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E9%95%BFincrement/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/18/Hibernate主键自增长increment/</id>
    <published>2017-06-18T04:21:14.000Z</published>
    <updated>2018-07-09T09:13:09.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="increment"><a href="#increment" class="headerlink" title="increment"></a>increment</h2><p>由Hibernate从数据库中取出主键的最大值（每个session只取1次），以该值为基础，每次增量为1，在内存中生成主键，不依赖于底层的数据库，因此可以跨数据库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Hibernate调用org.hibernate.id.IncrementGenerator类里面的generate()方法，使用select max(idColumnName) from tableName语句获取主键最大值。</p><p>以上为 <code>XML</code> 配置自增长，而使用 <code>注解</code> 的方式就需要一下的步骤实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GenericGenerator</span>(name = <span class="string">"generator"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line"><span class="meta">@GeneratedValue</span>(generator = <span class="string">"generator"</span>)</span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@Column</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;increment&quot;&gt;&lt;a href=&quot;#increment&quot; class=&quot;headerlink&quot; title=&quot;increment&quot;&gt;&lt;/a&gt;increment&lt;/h2&gt;&lt;p&gt;由Hibernate从数据库中取出主键的最大值（每个session只取1次），以该值
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
      <category term="increment" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/increment/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="increment" scheme="http://zhuzhenglong233.github.io/tags/increment/"/>
    
  </entry>
  
  <entry>
    <title>Struts2拦截器实现用户访问控制</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/14/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/14/Struts2拦截器实现用户访问控制/</id>
    <published>2017-06-14T03:00:19.000Z</published>
    <updated>2018-07-09T09:12:57.783Z</updated>
    
    <content type="html"><![CDATA[<h2 id="拦截器-Interceptor"><a href="#拦截器-Interceptor" class="headerlink" title="拦截器 Interceptor"></a>拦截器 Interceptor</h2><p>java里的拦截器是动态拦截Action调用的对象。它提供了一种机制可以使开发者可以定义在一个action执行的前后执行的代码，也可以在一个action执行前阻止其执行，同时也提供了一种可以提取action中可重用部分的方式。在AOP（Aspect-Oriented Programming）中拦截器用于在某个方法或字段被访问之前，进行拦截然后在之前或之后加入某些操作。</p><h2 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h2><h3 id="自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。"><a href="#自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。" class="headerlink" title="自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。"></a>自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。</h3><h3 id="在struts-xml中注册上一步中定义的拦截器。"><a href="#在struts-xml中注册上一步中定义的拦截器。" class="headerlink" title="在struts.xml中注册上一步中定义的拦截器。"></a>在struts.xml中注册上一步中定义的拦截器。</h3><h3 id="在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。"><a href="#在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。" class="headerlink" title="在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。"></a>在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。</h3><h2 id="与过滤器的区别"><a href="#与过滤器的区别" class="headerlink" title="与过滤器的区别"></a>与过滤器的区别</h2><p>过滤器可以简单理解为“取你所想取”，忽视掉那些你不想要的东西；拦截器可以简单理解为“拒你所想拒”，关心你想要拒绝掉哪些东西，比如一个BBS论坛上拦截掉敏感词汇。</p><h3 id="拦截器是基于java反射机制的，而过滤器是基于函数回调的。"><a href="#拦截器是基于java反射机制的，而过滤器是基于函数回调的。" class="headerlink" title="拦截器是基于java反射机制的，而过滤器是基于函数回调的。"></a>拦截器是基于java反射机制的，而过滤器是基于函数回调的。</h3><h3 id="过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。"><a href="#过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。" class="headerlink" title="过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。"></a>过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。</h3><h3 id="拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。"><a href="#拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。" class="headerlink" title="拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。"></a>拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。</h3><h3 id="拦截器可以访问action上下文、值栈里的对象，而过滤器不能。"><a href="#拦截器可以访问action上下文、值栈里的对象，而过滤器不能。" class="headerlink" title="拦截器可以访问action上下文、值栈里的对象，而过滤器不能。"></a>拦截器可以访问action上下文、值栈里的对象，而过滤器不能。</h3><h3 id="在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。"><a href="#在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。" class="headerlink" title="在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。"></a>在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。</h3><h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">extends</span> <span class="title">AbstractInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">intercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//得到session key为users 的数据</span></span><br><span class="line">        Object users = actionInvocation.getInvocationContext().getSession().get(<span class="string">"users"</span>);</span><br><span class="line">        String name = actionInvocation.getInvocationContext().getName();</span><br><span class="line">        <span class="comment">//得到访问action 的名字 login.action 得到 login</span></span><br><span class="line">        System.out.println(name);</span><br><span class="line">        <span class="comment">//第一次登录时users 肯定为空,如果登录时找不到users 应该给它通过拦截器</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != users || <span class="string">"login"</span>.equals(name))</span><br><span class="line">            <span class="comment">//继续执行剩余的拦截器和action</span></span><br><span class="line">            <span class="keyword">return</span> actionInvocation.invoke();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="struts-xml-拦截器配置"><a href="#struts-xml-拦截器配置" class="headerlink" title="struts.xml 拦截器配置"></a>struts.xml 拦截器配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--定义权限验证拦截器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">"sessionUser"</span> <span class="attr">class</span>=<span class="string">"com.interceptor.LoginInterceptor"</span>&gt;</span><span class="tag">&lt;/<span class="name">interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">"LoginFlag"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"sessionUser"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">"defaultStack"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义默认拦截器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">"LoginFlag"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中可以看到有一行配置 <code>&lt;interceptor-ref name=&quot;defaultStack&quot;/&gt;</code> defaultStack该拦截器用于实现数据的传输，如果不写的话会出现数据提取不到</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;拦截器-Interceptor&quot;&gt;&lt;a href=&quot;#拦截器-Interceptor&quot; class=&quot;headerlink&quot; title=&quot;拦截器 Interceptor&quot;&gt;&lt;/a&gt;拦截器 Interceptor&lt;/h2&gt;&lt;p&gt;java里的拦截器是动态拦截Acti
      
    
    </summary>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/categories/Struts2/"/>
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/categories/Struts2/idea/"/>
    
      <category term="Interceptor" scheme="http://zhuzhenglong233.github.io/categories/Struts2/idea/Interceptor/"/>
    
      <category term="AbstractInterceptor" scheme="http://zhuzhenglong233.github.io/categories/Struts2/idea/Interceptor/AbstractInterceptor/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/tags/Struts2/"/>
    
      <category term="拦截器" scheme="http://zhuzhenglong233.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
      <category term="Interceptor" scheme="http://zhuzhenglong233.github.io/tags/Interceptor/"/>
    
  </entry>
  
  <entry>
    <title>OGNL创建和配置自定义日期类型转换器</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/12/OGNL%E5%88%9B%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%99%A8/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/12/OGNL创建和配置自定义日期类型转换器/</id>
    <published>2017-06-12T06:52:58.000Z</published>
    <updated>2018-07-09T09:12:59.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OGNL"><a href="#OGNL" class="headerlink" title="OGNL"></a>OGNL</h1><p><code>OGNL</code> 中文名 <code>对象图导航语言</code> 是 <code>Object-Graph Navigation Language</code> 的缩写，它是一种功能强大的表达式语言，通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。它使用相同的表达式去存取对象的属性。</p><h1 id="基于OGNL的类型转换器"><a href="#基于OGNL的类型转换器" class="headerlink" title="基于OGNL的类型转换器"></a>基于OGNL的类型转换器</h1><p>Struts2的类型转换器都需要实现一个TypeConverter接口，该接口位于ognl.jar包内，也是就Struts2框架的转换器使用了OGNL技术。该接口定义了一个convertValue()方法，实现该接口的类型转换器实现类都需要重写该方法来进行类型转换。OGNL还提供了一个实现TypeConverter接口的类DefaultTypeConverter，开发者只要继承该类，就可以开发类型转换器的实现类。</p><p>DefaultTypeConverter类的子类需要重写convertValue()方法，来实现字符串类型与复合类型之间的双向转换。convertValue()方法有三个参数：Map context：该参数为类型转换环境的上下文内容；Object value：该参数为需要转换的参数；Class toType：该参数指的是转换目标的类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointConverter</span> <span class="keyword">extends</span> <span class="title">DefaultTypeConverter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">convertValue</span><span class="params">(Map context,Object value,Class toType)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"正在转换..."</span>);</span><br><span class="line">        <span class="keyword">if</span>(toType==Point.class)&#123;</span><br><span class="line">            String[] p=(String[])value;</span><br><span class="line">            Point point=<span class="keyword">new</span> Point();</span><br><span class="line">            String[] pp=p[<span class="number">0</span>].split(<span class="string">","</span>);</span><br><span class="line">            point.setX(pp[<span class="number">0</span>]);</span><br><span class="line">            point.setY(pp[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">return</span> point;        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(toType==String.class)&#123;</span><br><span class="line">            Point point=(Point) value;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&lt;"</span>+point.getX()+<span class="string">","</span>+point.getY()+<span class="string">"&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>convertValue()方法是通过toType的类型判断来实现双向转换的</p><h1 id="基于Struts2的类型转换器"><a href="#基于Struts2的类型转换器" class="headerlink" title="基于Struts2的类型转换器"></a>基于Struts2的类型转换器</h1><p>Struts2框架提供了一个类型转换器的StrutsTypeConverter抽象类，开发者可以继承该类来开发自定义的类型转换器实现类。 该抽象类实际上继承了DefaultTypeConverter类，在该类的基础上进行了简化。StrutsTypeConverter抽象类是Struts2框架中类型转换器的基础，该类中提供了两个抽象方法，这两个抽象方法分别实现“form字符串参数-Struts复合类型”之间的双向转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointConverter2</span> <span class="keyword">extends</span> <span class="title">StrutsTypeConverter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义convertFromString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">convertFromString</span><span class="params">(Map arg0, String[] arg1, Class arg2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        System.out.println(<span class="string">"正在转换：从字符串转换到复合类型..."</span>);</span><br><span class="line">        Point point=<span class="keyword">new</span> Point();</span><br><span class="line">        String[] pp=arg1[<span class="number">0</span>].split(<span class="string">","</span>);</span><br><span class="line">        point.setX(pp[<span class="number">0</span>]);</span><br><span class="line">        point.setY(pp[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">return</span> point;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义convertToString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">convertToString</span><span class="params">(Map arg0, Object arg1)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        Point point=(Point) arg1;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;"</span>+point.getX()+<span class="string">","</span>+point.getY()+<span class="string">"&gt;"</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自定义日期类型转换器例子"><a href="#自定义日期类型转换器例子" class="headerlink" title="自定义日期类型转换器例子"></a>自定义日期类型转换器例子</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><pre><code>ideaJavaMavenStruts2Tomcat</code></pre><h2 id="pom-xml-配置-dependencies"><a href="#pom-xml-配置-dependencies" class="headerlink" title="pom.xml 配置 dependencies"></a>pom.xml 配置 dependencies</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="util包-DateConverter类"><a href="#util包-DateConverter类" class="headerlink" title="util包 DateConverter类"></a>util包 DateConverter类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.conversion.TypeConversionException;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.util.StrutsTypeConverter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateConverter</span> <span class="keyword">extends</span> <span class="title">StrutsTypeConverter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//支持转换的多种日期格式,可增加时间格式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DateFormat[] dfs = &#123;</span><br><span class="line">            <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日"</span>),</span><br><span class="line">            <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy/MM/dd"</span>),</span><br><span class="line">            <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>),</span><br><span class="line">            <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy@MM@dd"</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将指定格式字符串转换为日期类型</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map     类型转换环境的上下文内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> strings 需要转换的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> aClass  转换目标的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">convertFromString</span><span class="params">(Map map, String[] strings, Class aClass)</span> </span>&#123;</span><br><span class="line">        String dateStr = strings[<span class="number">0</span>];            <span class="comment">//获取日期的字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dfs.length; i++) &#123;  <span class="comment">//遍历日期支持格式,进行转换</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> dfs[i].parse(dateStr);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果遍历完毕后仍没有转换成功,表明出现转换异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> TypeConversionException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将日期转换为指定格式字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">convertToString</span><span class="params">(Map map, Object o)</span> </span>&#123;</span><br><span class="line">        Date date = (Date) o;</span><br><span class="line">        <span class="comment">//输出的格式是yyyy-MM-dd</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>).format(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="action包-DateAction类"><a href="#action包-DateAction类" class="headerlink" title="action包 DateAction类"></a>action包 DateAction类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ValidationAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">ValidationAware</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTime</span><span class="params">(Date time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date time;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xwork-conversion-properties-配置"><a href="#xwork-conversion-properties-配置" class="headerlink" title="xwork-conversion.properties 配置"></a>xwork-conversion.properties 配置</h2><pre><code>转换类全名=类型转换器类全名</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.util.Date=com.util.DateConverter</span><br></pre></td></tr></table></figure><h2 id="测试页面-index-jsp"><a href="#测试页面-index-jsp" class="headerlink" title="测试页面 index.jsp"></a>测试页面 index.jsp</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"format.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    日期类型转换器:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"time"</span> <span class="attr">value</span>=<span class="string">"1993@12@24"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"time"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s:fielderror</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web-xml-配置"><a href="#web-xml-配置" class="headerlink" title="web.xml 配置"></a>web.xml 配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"2.4"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="struts-xml-配置"><a href="#struts-xml-配置" class="headerlink" title="struts.xml 配置"></a>struts.xml 配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span><br><span class="line"><span class="meta">        "http://struts.apache.org/dtds/struts-2.3.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--value 的 message 为指定根目录的 message.properties 配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.custom.i18n.resources"</span> <span class="attr">value</span>=<span class="string">"message"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"format"</span> <span class="attr">class</span>=<span class="string">"com.action.DateAction"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="message-properties-修改错误信息配置"><a href="#message-properties-修改错误信息配置" class="headerlink" title="message.properties 修改错误信息配置"></a>message.properties 修改错误信息配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xwork.default.invalid.fieldvalue=\u5b57\u6bb5&quot;&#123;0&#125;&quot;\u7684\u503c\u65e0\u6548</span><br></pre></td></tr></table></figure><pre><code>`\u5b57\u6bb5&quot;{0}&quot;\u7684\u503c\u65e0\u6548` 为 Unicode编码 `字段&quot;{0}&quot;的值无效` 配置文件 `中文` 需要转换成 `Unicode编码`</code></pre><p><a href="http://tool.chinaz.com/Tools/Unicode.aspx" target="_blank" rel="noopener">Unicode编码转换网站</a></p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>  <img src="http://p87bi0e6z.bkt.clouddn.com/20180612155505.png" alt="Alt image"></p><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><h3 id="初始页面"><a href="#初始页面" class="headerlink" title="初始页面"></a>初始页面</h3><p>  <img src="http://p87bi0e6z.bkt.clouddn.com/20180612154744.png" alt="Alt image"></p><h3 id="转换成功"><a href="#转换成功" class="headerlink" title="转换成功"></a>转换成功</h3><p>  <img src="http://p87bi0e6z.bkt.clouddn.com/20180612154823.png" alt="Alt image"></p><h3 id="转换失败"><a href="#转换失败" class="headerlink" title="转换失败"></a>转换失败</h3><p>  <img src="http://p87bi0e6z.bkt.clouddn.com/20180612155005.png" alt="Alt image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;OGNL&quot;&gt;&lt;a href=&quot;#OGNL&quot; class=&quot;headerlink&quot; title=&quot;OGNL&quot;&gt;&lt;/a&gt;OGNL&lt;/h1&gt;&lt;p&gt;&lt;code&gt;OGNL&lt;/code&gt; 中文名 &lt;code&gt;对象图导航语言&lt;/code&gt; 是 &lt;code&gt;Object-Grap
      
    
    </summary>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/categories/Struts2/"/>
    
      <category term="OGNL" scheme="http://zhuzhenglong233.github.io/categories/Struts2/OGNL/"/>
    
      <category term="自定义转换器" scheme="http://zhuzhenglong233.github.io/categories/Struts2/OGNL/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BD%AC%E6%8D%A2%E5%99%A8/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="Java" scheme="http://zhuzhenglong233.github.io/tags/Java/"/>
    
      <category term="OGNL" scheme="http://zhuzhenglong233.github.io/tags/OGNL/"/>
    
      <category term="自定义转换器" scheme="http://zhuzhenglong233.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BD%AC%E6%8D%A2%E5%99%A8/"/>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>Struts2的配置和一个简单的例子</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/07/Struts2%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%BE%8B%E5%AD%90/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/07/Struts2的配置和一个简单的例子/</id>
    <published>2017-06-07T08:29:30.000Z</published>
    <updated>2018-07-09T09:12:58.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><pre><code>ideatomcatjdkmaven</code></pre><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="pom-xml-配置-Struts2"><a href="#pom-xml-配置-Struts2" class="headerlink" title="pom.xml 配置 Struts2"></a>pom.xml 配置 Struts2</h3><p><a href="https://mvnrepository.com/artifact/org.apache.struts" target="_blank" rel="noopener">点击前往获取自己想要的版本对应的XML</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建-User-类-用于展现提取对象的数据"><a href="#创建-User-类-用于展现提取对象的数据" class="headerlink" title="创建 User 类 用于展现提取对象的数据"></a>创建 User 类 用于展现提取对象的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建-LoginAction-类-代替以往的-servlet-层"><a href="#创建-LoginAction-类-代替以往的-servlet-层" class="headerlink" title="创建 LoginAction 类 代替以往的 servlet 层"></a>创建 LoginAction 类 代替以往的 servlet 层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.action;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承 ActionSupport 用于实现 servlet层 数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line">    <span class="comment">//接收页面提交数据 属性名 为 input 标签 name 属性</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供 get set 接收页面的数据 get 为提取 set 为接收</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现Action 的方法 为 struts.xml action 标签 method=""的默认方法入口 可以不写该属性</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于实现 servlet层 数据校验</span></span><br><span class="line">    <span class="comment">//在页面跳转到login 方法前会先进来这里面</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(username.length()==<span class="number">0</span> || password.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//如果在validate 方法里面 调用addFieldError 则后面不进入 login 方法 并如同login 默认返回 Action 接口提供的INPUT常量字符串</span></span><br><span class="line">            addFieldError(<span class="string">"username"</span>,<span class="string">"用户名不能为空"</span>);</span><br><span class="line">            addFieldError(<span class="string">"password"</span>,<span class="string">"密码不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义入口 login</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"simon"</span>);</span><br><span class="line">        user.setPassword(<span class="string">"simon"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到上下文对象</span></span><br><span class="line">        ActionContext context = ActionContext.getContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到request对象</span></span><br><span class="line">        Map&lt;String, Object&gt; request = (Map&lt;String, Object&gt;) context.get(<span class="string">"request"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到session对象</span></span><br><span class="line">        Map&lt;String, Object&gt; session = context.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到application对象</span></span><br><span class="line">        Map&lt;String, Object&gt; application = context.getApplication();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user.getUsername().equals(getUsername()) &amp;&amp; user.getPassword().equals(getPassword())) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//登录成功存一个User对象</span></span><br><span class="line">            session.put(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用自定义字符串返回 success Action 接口提供的常量为 SUCCESS</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义errorinfo 错误信息到request</span></span><br><span class="line">        request.put(<span class="string">"errorinfo"</span>, <span class="string">"登录失败"</span>);</span><br><span class="line">        <span class="comment">//使用Action 接口提供的常量字符串</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建页面-index-jsp"><a href="#创建页面-index-jsp" class="headerlink" title="创建页面 index.jsp"></a>创建页面 index.jsp</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--从request里面找errorinfo的数据--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>$&#123;requestScope.errorinfo&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--显示全部</span> <span class="attr">fielderror</span> 错误信息<span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">s:fielderror</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--显示某个</span> <span class="attr">fielderror</span> 错误信息<span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">s:fielderror</span> <span class="attr">fieldName</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--Login</span> 为 <span class="attr">struts.xml</span> 定义 <span class="attr">action</span> <span class="attr">name</span> 的名称 <span class="attr">.action</span> 为 <span class="attr">Struts</span> 标识<span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"Login.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--name属性要和LoginAction对象的属性一致--%</span>&gt;</span></span><br><span class="line">    用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密　码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建页面-success-jsp"><a href="#创建页面-success-jsp" class="headerlink" title="创建页面 success.jsp"></a>创建页面 success.jsp</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"s"</span> <span class="attr">uri</span>=<span class="string">"/struts-tags"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎您，<span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>session对象的User对象数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户名: $&#123;sessionScope.user.username&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>密　码: $&#123;sessionScope.user.password&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置-web-xml-文件"><a href="#配置-web-xml-文件" class="headerlink" title="配置 web.xml 文件"></a>配置 web.xml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"2.4"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置-struts-xml-文件"><a href="#配置-struts-xml-文件" class="headerlink" title="配置 struts.xml 文件"></a>配置 struts.xml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></span><br><span class="line"><span class="meta">        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span><br><span class="line"><span class="meta">        "http://struts.apache.org/dtds/struts-2.3.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--method 默认值为execute 也可以自定义login方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"Login"</span> <span class="attr">class</span>=<span class="string">"com.action.LoginAction"</span> <span class="attr">method</span>=<span class="string">"login"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示程序处理正常，并返回给用户成功后的结果--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"success"</span>&gt;</span>success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示处理结果失败--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"error"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示数据校验处理失败--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">"input"</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180607164908.png" alt="Alt image"></p><h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><h3 id="Struts2官方文档"><a href="#Struts2官方文档" class="headerlink" title="Struts2官方文档"></a><a href="http://struts.apache.org/docs/" target="_blank" rel="noopener">Struts2官方文档</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;idea
tomcat
jdk
maven
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; c
      
    
    </summary>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/categories/Struts2/"/>
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/categories/Struts2/idea/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="Struts2" scheme="http://zhuzhenglong233.github.io/tags/Struts2/"/>
    
      <category term="servlet" scheme="http://zhuzhenglong233.github.io/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate中的mappedBy和注解@JoinColumn</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/06/Hibernate%E4%B8%AD%E7%9A%84mappedBy%E5%92%8C%E6%B3%A8%E8%A7%A3-JoinColumn/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/06/Hibernate中的mappedBy和注解-JoinColumn/</id>
    <published>2017-06-06T12:00:31.000Z</published>
    <updated>2018-07-09T09:32:33.624Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mappedBy"><a href="#mappedBy" class="headerlink" title="mappedBy"></a>mappedBy</h1><p>mappedBy用于指定具有双向关系的两个实体中。哪个实体是被关联处理的。</p><h2 id="只有OneToOne-OneToMany-ManyToMany上才有mappedBy属性，ManyToOne不存在该属性"><a href="#只有OneToOne-OneToMany-ManyToMany上才有mappedBy属性，ManyToOne不存在该属性" class="headerlink" title="只有OneToOne,OneToMany,ManyToMany上才有mappedBy属性，ManyToOne不存在该属性"></a>只有OneToOne,OneToMany,ManyToMany上才有mappedBy属性，ManyToOne不存在该属性</h2><h2 id="OneToMany-mappedBy-“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”"><a href="#OneToMany-mappedBy-“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”" class="headerlink" title="@OneToMany(mappedBy=“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”)"></a>@OneToMany(mappedBy=“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”)</h2><h2 id="关系的拥有方-Many的一方-负责关系的维护，在拥有方建立外键。所以用到-JoinColumn"><a href="#关系的拥有方-Many的一方-负责关系的维护，在拥有方建立外键。所以用到-JoinColumn" class="headerlink" title="关系的拥有方(Many的一方)负责关系的维护，在拥有方建立外键。所以用到@JoinColumn"></a>关系的拥有方(Many的一方)负责关系的维护，在拥有方建立外键。所以用到@JoinColumn</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Users</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mappedBy由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名</span></span><br><span class="line">    <span class="meta">@OneToMany</span>(targetEntity = House.class, mappedBy = <span class="string">"user_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Set&lt;House&gt; houseSet;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JoinColumn"><a href="#JoinColumn" class="headerlink" title="JoinColumn"></a>JoinColumn</h1><h2 id="JoinColumn指定了Users通过外键u-id关联到当前的user-id。"><a href="#JoinColumn指定了Users通过外键u-id关联到当前的user-id。" class="headerlink" title="@JoinColumn指定了Users通过外键u_id关联到当前的user_id。"></a>@JoinColumn指定了Users通过外键u_id关联到当前的user_id。</h2><p>用@JoinColumn指向One的一个外键字段(数据库对应外键字段名)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">House</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span>(targetEntity = Users.class)</span><br><span class="line">    <span class="meta">@JoinColumn</span>(name = <span class="string">"u_id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Users user_id;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mappedBy&quot;&gt;&lt;a href=&quot;#mappedBy&quot; class=&quot;headerlink&quot; title=&quot;mappedBy&quot;&gt;&lt;/a&gt;mappedBy&lt;/h1&gt;&lt;p&gt;mappedBy用于指定具有双向关系的两个实体中。哪个实体是被关联处理的。&lt;/p&gt;
&lt;h2 
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
      <category term="注解" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/%E6%B3%A8%E8%A7%A3/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="mappedBy" scheme="http://zhuzhenglong233.github.io/tags/mappedBy/"/>
    
      <category term="JoinColumn" scheme="http://zhuzhenglong233.github.io/tags/JoinColumn/"/>
    
  </entry>
  
  <entry>
    <title>Open Session In View 模式</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/06/Open-Session-In-View-%E6%A8%A1%E5%BC%8F/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/06/Open-Session-In-View-模式/</id>
    <published>2017-06-06T04:20:09.000Z</published>
    <updated>2018-07-09T09:13:07.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-Open-Session-In-View-模式"><a href="#什么是-Open-Session-In-View-模式" class="headerlink" title="什么是 Open Session In View 模式"></a>什么是 Open Session In View 模式</h1><p>在hibernate中使用load方法时，并未把数据真正获取时就关闭了session，当我们真正想获取数据时会迫使load加载数据，而此时 session已关闭，所以就会出现异常。 比较典型的是在MVC模式中，我们在M层调用持久层获取数据时(持久层用的是load方法加载数据)，当这一调用结束时，session随之关闭，而我们 希望在V层使用这些数据，这时才会迫使load加载数据，我们就希望这时的session是open着得，这就是所谓的Open Session In view 。 我们可以filter来达到此目的</p><h2 id="OpenSesstionInViewFilter-java-的主要代码"><a href="#OpenSesstionInViewFilter-java-的主要代码" class="headerlink" title="OpenSesstionInViewFilter.java 的主要代码"></a>OpenSesstionInViewFilter.java 的主要代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.accp.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.accp.util.HibernateUtil;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.HibernateException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenSesstionInViewFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        Transaction transaction = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"请求到达时打开session并启动事务"</span>);</span><br><span class="line">            transaction = HibernateUtil.currentSesstion().beginTransaction();</span><br><span class="line">            System.out.println(<span class="string">"执行请求处理链"</span>);</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">            System.out.println(<span class="string">"返回响应时，提交事务"</span>);</span><br><span class="line">            transaction.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (HibernateException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (transaction != <span class="keyword">null</span>) &#123;</span><br><span class="line">                transaction.rollback();</span><br><span class="line">                System.out.println(<span class="string">"回滚事务"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web-xml-中-Filter-的配置"><a href="#web-xml-中-Filter-的配置" class="headerlink" title="web.xml 中 Filter 的配置"></a>web.xml 中 Filter 的配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>OpenSesstionInView<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.accp.filter.OpenSesstionInViewFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>OpenSesstionInView<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是-Open-Session-In-View-模式&quot;&gt;&lt;a href=&quot;#什么是-Open-Session-In-View-模式&quot; class=&quot;headerlink&quot; title=&quot;什么是 Open Session In View 模式&quot;&gt;&lt;/a&gt;什么是 O
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
      <category term="Session" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/Session/"/>
    
      <category term="Filter" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/Session/Filter/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="Session" scheme="http://zhuzhenglong233.github.io/tags/Session/"/>
    
      <category term="Filter" scheme="http://zhuzhenglong233.github.io/tags/Filter/"/>
    
  </entry>
  
  <entry>
    <title>使用工具类管理SessionFactory和Session</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/06/%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%AE%A1%E7%90%86SessionFactory%E5%92%8CSession/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/06/使用工具类管理SessionFactory和Session/</id>
    <published>2017-06-06T04:16:09.000Z</published>
    <updated>2018-07-09T09:13:04.514Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用工具类管理SessionFactory和Session"><a href="#使用工具类管理SessionFactory和Session" class="headerlink" title="使用工具类管理SessionFactory和Session"></a>使用工具类管理SessionFactory和Session</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.hibernate.HibernateException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HibernateUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化Configuration和SessionFactory</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//配置文件名，来源resources 根目录</span></span><br><span class="line">            configuration = <span class="keyword">new</span> Configuration().configure(<span class="string">"hibernate.cfg.xml"</span>);</span><br><span class="line">            sessionFactory = configuration.buildSessionFactory();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (HibernateException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ExceptionInInitializerError(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取Session对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title">currentSesstion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.getCurrentSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用工具类管理SessionFactory和Session&quot;&gt;&lt;a href=&quot;#使用工具类管理SessionFactory和Session&quot; class=&quot;headerlink&quot; title=&quot;使用工具类管理SessionFactory和Session&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="Session" scheme="http://zhuzhenglong233.github.io/tags/Session/"/>
    
      <category term="SessionFactory" scheme="http://zhuzhenglong233.github.io/tags/SessionFactory/"/>
    
  </entry>
  
  <entry>
    <title>idea建立WebServlet遇到的问题</title>
    <link href="http://zhuzhenglong233.github.io/2017/06/06/idea%E5%BB%BA%E7%AB%8BWebServlet%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://zhuzhenglong233.github.io/2017/06/06/idea建立WebServlet遇到的问题/</id>
    <published>2017-06-06T03:46:11.000Z</published>
    <updated>2018-07-09T09:12:56.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="直接用idea建立的web项目，其自动生成的web-xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3-0版本"><a href="#直接用idea建立的web项目，其自动生成的web-xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3-0版本" class="headerlink" title="直接用idea建立的web项目，其自动生成的web.xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3.0版本"></a>直接用idea建立的web项目，其自动生成的web.xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3.0版本</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="随后创建-Java-类-继承-javax-servlet-http-HttpServlet"><a href="#随后创建-Java-类-继承-javax-servlet-http-HttpServlet" class="headerlink" title="随后创建 Java 类 继承 javax.servlet.http.HttpServlet"></a>随后创建 Java 类 继承 javax.servlet.http.HttpServlet</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">selectServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Simon"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="利用注解进行配置"><a href="#利用注解进行配置" class="headerlink" title="利用注解进行配置"></a>利用注解进行配置</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在servlet类的上面写入注解@WebServlet("/hello")</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/hello"</span>)</span><br></pre></td></tr></table></figure><h1 id="pom-xml-配置"><a href="#pom-xml-配置" class="headerlink" title="pom.xml 配置"></a>pom.xml 配置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>chapter6d4<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>chapter6d4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.hynnet/oracle-driver-ojdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;直接用idea建立的web项目，其自动生成的web-xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3-0版本&quot;&gt;&lt;a href=&quot;#直接用idea建立的web项目，其自动生成的
      
    
    </summary>
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/categories/idea/"/>
    
      <category term="web.xml" scheme="http://zhuzhenglong233.github.io/categories/idea/web-xml/"/>
    
    
      <category term="idea" scheme="http://zhuzhenglong233.github.io/tags/idea/"/>
    
      <category term="servlet" scheme="http://zhuzhenglong233.github.io/tags/servlet/"/>
    
      <category term="Javaweb" scheme="http://zhuzhenglong233.github.io/tags/Javaweb/"/>
    
      <category term="web.xml" scheme="http://zhuzhenglong233.github.io/tags/web-xml/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释</title>
    <link href="http://zhuzhenglong233.github.io/2017/05/31/Hibernate%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hibernate-cfg-xml%E5%92%8C-hbm-xml%E7%9A%84%E8%AF%A6%E7%BB%86%E8%A7%A3%E9%87%8A/"/>
    <id>http://zhuzhenglong233.github.io/2017/05/31/Hibernate配置文件hibernate-cfg-xml和-hbm-xml的详细解释/</id>
    <published>2017-05-31T08:49:50.000Z</published>
    <updated>2018-07-09T09:13:01.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Hibernate"><a href="#什么是Hibernate" class="headerlink" title="什么是Hibernate"></a>什么是Hibernate</h1><p>Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet/JSP的Web应用中使用，最具革命意义的是，Hibernate可以在应用EJB的J2EE架构中取代CMP，完成数据持久化的重任。</p><h1 id="Hibernate配置文件hibernate-cfg-xml和-hbm-xml的详细解释"><a href="#Hibernate配置文件hibernate-cfg-xml和-hbm-xml的详细解释" class="headerlink" title="Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释"></a>Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释</h1><p>Hibernate 中有两个常见的配置文件 <code>hibernate.cfg.xml</code> 和 <code>XXX.hbm.xml</code></p><p>其中 <code>Maven</code> 项目对象模型的 <code>pom.xml</code> 可以去 <a href="https://mvnrepository.com/" target="_blank" rel="noopener">Maven知识库</a> 得到对应的 <code>dependency</code> 部分</p><p>如需手动导入文件，先下载文件。并用 <code>mvn</code> 执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=下载文件所在路径 -DgroupId=dependency配置的groupId部分 -DartifactId=dependency配置的artifactId部分 -Dversion=dependency配置的版本 -Dpackaging=属于什么文件</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=c:\ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.1.0 -Dpackaging=jar</span><br></pre></td></tr></table></figure><h2 id="hibernate-cfg-xml"><a href="#hibernate-cfg-xml" class="headerlink" title="hibernate.cfg.xml"></a>hibernate.cfg.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--标准的XML文件的起始行，version='1.0'表明XML的版本，encoding='gb2312'表明XML文件的编码方式--&gt;</span>     </span><br><span class="line">  &lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="comment">&lt;!--表明解析本XML文件的DTD文档位置，DTD是Document Type Definition 的缩写,即文档类型的定义,XML解析器使用DTD文档来检查XML文件的合法性。hibernate.sourceforge.net/hibernate-configuration-3.0dtd可以在Hibernate3.1.3软件包中的src\org\hibernate目录中找到此文件--&gt;</span>     </span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-configuration PUBLIC     </span></span><br><span class="line"><span class="meta">"-//Hibernate/Hibernate Configuration DTD 3.0//EN"     </span></span><br><span class="line"><span class="meta">"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"&gt;</span>     </span><br><span class="line"><span class="comment">&lt;!--声明Hibernate配置文件的开始--&gt;</span>          </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--表明以下的配置是针对session-factory配置的，SessionFactory是Hibernate中的一个类，这个类主要负责保存HIbernate的配置信息，以及对Session的操作--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">session-factory</span>&gt;</span>        </span><br><span class="line">        <span class="comment">&lt;!--配置数据库的驱动程序，Hibernate在连接数据库时，需要用到数据库的驱动程序--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.driver_class"</span>&gt;</span>oracle.jdbc.driver.OracleDriver <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--设置数据库的连接url:jdbc:mysql://localhost/hibernate,其中localhost表示mysql服务器名称，此处为本机，    hibernate是数据库名--&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.url"</span>&gt;</span>jdbc:mysql://localhost/hibernate<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--连接数据库是用户名--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.username"</span>&gt;</span>root <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--连接数据库是密码--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.password"</span>&gt;</span>123456 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>            </span><br><span class="line">        <span class="comment">&lt;!--数据库连接池的大小--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.pool.size"</span>&gt;</span>20 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>            </span><br><span class="line">        <span class="comment">&lt;!--是否在后台显示Hibernate用到的SQL语句，开发时设置为true，便于差错，程序运行时可以在Eclipse的控制台显示Hibernate的执行Sql语句。项目部署后可以设置为false，提高运行效率--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.fetch_size是指Hibernate每次从数据库中取出并放到JDBC的Statement中的记录条数。Fetch Size设的越大，读数据库的次数越少，速度越快，Fetch Size越小，读数据库的次数越多，速度越慢--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbc.fetch_size"</span>&gt;</span>50 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbc.batch_size"</span>&gt;</span>23 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbc.use_scrollable_resultset"</span>&gt;</span>false <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--connection.useUnicode连接数据库时是否使用Unicode编码--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"Connection.useUnicode"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--connection.characterEncoding连接数据库时数据的传输字符集编码方式，最好设置为gbk，用gb2312有的字符不全--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connection.characterEncoding"</span>&gt;</span>gbk <span class="tag">&lt;/<span class="name">property</span>&gt;</span>          </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--hibernate.dialect 只是Hibernate使用的数据库方言,就是要用Hibernate连接那种类型的数据库服务器。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>org.hibernate.dialect.MySQLDialect <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--指定映射文件为“hibernate/ch1/UserInfo.hbm.xml”--&gt;</span>            </span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"org/mxg/UserInfo.hbm.xml"</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span>        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span>      </span><br><span class="line">    //连接驱动        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClassName&#125;"</span> /&gt;</span>      </span><br><span class="line">    //连接url,        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span>      </span><br><span class="line">    //连接用户名        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span> /&gt;</span>      </span><br><span class="line">    //连接密码        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span> /&gt;</span>      </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>      </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"hbSessionFactory"</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span>&gt;</span>      </span><br><span class="line">        //hibernate配置文件位置        </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WEB-INF/hibernate.cfg.xml <span class="tag">&lt;/<span class="name">value</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configurationClass"</span>      </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">"org.hibernate.cfg.AnnotationConfiguration"</span> /&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernateProperties"</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span>      </span><br><span class="line">            //针对oracle数据库的方言,特定的关系数据库生成优化的SQL        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>      </span><br><span class="line">            org.hibernate.dialect.OracleDialect        </span><br><span class="line">            <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //选择HQL解析器的实现        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.query.factory_class"</span>&gt;</span>      </span><br><span class="line">            org.hibernate.hql.ast.ASTQueryTranslatorFactory        </span><br><span class="line">            <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //是否在控制台打印sql语句        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //在Hibernate系统参数中hibernate.use_outer_join被打开的情况下,该参数用来允许使用outer join来载入此集合的数据。        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.use_outer_join"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //默认打开，启用cglib反射优化。cglib是用来在Hibernate中动态生成PO字节码的，打开优化可以加快字节码构造的速度        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.cglib.use_reflection_optimizer"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //输出格式化后的sql,更方便查看        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.format_sql"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //“useUnicode”和“characterEncoding”决定了它是否在客户端和服务器端传输过程中进行Encode，以及如何进行Encode        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.connection.useUnicode"</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //允许查询缓存, 个别查询仍然需要被设置为可缓存的.        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.cache.use_query_cache"</span>&gt;</span>false <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.default_batch_fetch_size"</span>&gt;</span>16 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //连接池的最大活动个数        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.maxActive"</span>&gt;</span>100 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //当连接池中的连接已经被耗尽的时候，DBCP将怎样处理(0 = 失败,1 = 等待,2  =  增长)        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.whenExhaustedAction"</span>&gt;</span>1 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //最大等待时间        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.maxWait"</span>&gt;</span>1200 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //没有人用连接的时候，最大闲置的连接个数        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.maxIdle"</span>&gt;</span>10 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            ##以下是对prepared statement的处理，同上。        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.ps.maxActive"</span>&gt;</span>100 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.ps.whenExhaustedAction"</span>&gt;</span>1 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.ps.maxWait"</span>&gt;</span>1200 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dbcp.ps.maxIdle"</span>&gt;</span>10 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>      </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XXX-hbm-xml"><a href="#XXX-hbm-xml" class="headerlink" title="XXX.hbm.xml"></a>XXX.hbm.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;    </span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC     </span></span><br><span class="line"><span class="meta">    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"    </span></span><br><span class="line"><span class="meta">    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">    &lt;hibernate-mapping&gt;一般不去配置，采用默认即可。    </span></span><br><span class="line"><span class="comment">    default-cascade="none"：默认的级联风格，表与表联动。    </span></span><br><span class="line"><span class="comment">    default-lazy="true"：默认延迟加载    </span></span><br><span class="line"><span class="comment"> --&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">        &lt;class&gt;：使用class元素定义一个持久化类。    </span></span><br><span class="line"><span class="comment">        name="cn.javass.user.vo.UserModel"：持久化类的java全限定名；    </span></span><br><span class="line"><span class="comment">        table="tbl_user"：对应数据库表名；    </span></span><br><span class="line"><span class="comment">        mutable="true"：默认为true，设置为false时则不可以被应用程序更新或删除；    </span></span><br><span class="line"><span class="comment">        dynamic-insert="false"：默认为false，动态修改那些有改变过的字段，而不用修改所有字段；    </span></span><br><span class="line"><span class="comment">        dynamic-update="false"：默认为false，动态插入非空值字段；    </span></span><br><span class="line"><span class="comment">        select-before-update="false"：默认为false，在修改之前先做一次查询，与用户的值进行对比，有变化都会真正更新；    </span></span><br><span class="line"><span class="comment">        optimistic-lock="version"：默认为version(检查version/timestamp字段)，取值：all(检查全部字段)、dirty(只检查修改过的字段)、    </span></span><br><span class="line"><span class="comment">                                   none(不使用乐观锁定)，此参数主要用来处理并发，每条值都有固定且唯一的版本，版本为最新时才能执行操作；    </span></span><br><span class="line"><span class="comment">     --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"cn.javass.user.vo.UserModel"</span> <span class="attr">table</span>=<span class="string">"tbl_user"</span> <span class="attr">dynamic-insert</span>=<span class="string">"true"</span> <span class="attr">dynamic-update</span>=<span class="string">"true"</span> <span class="attr">optimistic-lock</span>=<span class="string">"version"</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;id&gt;：定义了该属性到数据库表主键字段的映射。    </span></span><br><span class="line"><span class="comment">            name="userId"：标识属性的名字；    </span></span><br><span class="line"><span class="comment">            column="userId"：表主键字段的名字，如果不填写与name一样；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"userId"</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!-- &lt;generator&gt;：指定主键由什么生成，推荐使用uuid（随机生成唯一通用的表示符，实体类的ID必须是String），  </span></span><br><span class="line"><span class="comment">                               native（让数据库自动选择用什么生成（根据底层数据库的能力选择identity，sequence或hilo中的一种）），  </span></span><br><span class="line"><span class="comment">                               assigned（指用户手工填入，默认）。 --&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"uuid"</span>/&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;version/&gt;：使用版本控制来处理并发，要开启optimistic-lock="version"和dynamic-update="true"。    </span></span><br><span class="line"><span class="comment">            name="version"：持久化类的属性名，column="version"：指定持有版本号的字段名；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span> <span class="attr">name</span>=<span class="string">"version"</span> <span class="attr">column</span>=<span class="string">"version"</span>/&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;property&gt;：为类定义一个持久化的javaBean风格的属性。    </span></span><br><span class="line"><span class="comment">            name="name"：标识属性的名字，以小写字母开头；    </span></span><br><span class="line"><span class="comment">            column="name"：表主键字段的名字，如果不填写与name一样；    </span></span><br><span class="line"><span class="comment">            update="true"/insert="true"：默认为true，表示可以被更新或插入；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"name"</span> /&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">column</span>=<span class="string">"sex"</span>/&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">column</span>=<span class="string">"age"</span>/&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            组件映射：把多个属性打包在一起当一个属性使用，用来把类的粒度变小。    </span></span><br><span class="line"><span class="comment">            &lt;component name="属性，这里指对象"&gt;    </span></span><br><span class="line"><span class="comment">                &lt;property name="name1"&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">                &lt;property name="name2"&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">            &lt;/component&gt;    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line"></span><br><span class="line">         <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;join&gt;:一个对象映射多个表，该元素必须放在所有&lt;property&gt;之后。    </span></span><br><span class="line"><span class="comment">            &lt;join table="tbl_test：子表名"&gt;    </span></span><br><span class="line"><span class="comment">                &lt;key column="uuid：子表主键"&gt;&lt;/key&gt;    </span></span><br><span class="line"><span class="comment">            &lt;property name="name1：对象属性" column="name：子表字段"&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">         &lt;/join&gt;    </span></span><br><span class="line"><span class="comment">          --&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是Hibernate&quot;&gt;&lt;a href=&quot;#什么是Hibernate&quot; class=&quot;headerlink&quot; title=&quot;什么是Hibernate&quot;&gt;&lt;/a&gt;什么是Hibernate&lt;/h1&gt;&lt;p&gt;Hibernate是一个开放源代码的对象关系映射框架，它对J
      
    
    </summary>
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/categories/Hibernate/"/>
    
    
      <category term="Hibernate" scheme="http://zhuzhenglong233.github.io/tags/Hibernate/"/>
    
      <category term="配置" scheme="http://zhuzhenglong233.github.io/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Next主题个性化教程</title>
    <link href="http://zhuzhenglong233.github.io/2017/04/05/Theme-of-personalized/"/>
    <id>http://zhuzhenglong233.github.io/2017/04/05/Theme-of-personalized/</id>
    <published>2017-04-05T03:36:07.000Z</published>
    <updated>2018-07-09T09:13:06.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h1><p><a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">点击 GitHub Corners</a> 或者 <a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">点击 GitHub Ribbons</a> 挑选自己喜欢的样式，并复制代码。</p><p>然后粘贴刚才复制的代码到 <code>themes/Hexo主题文件夹/layout/导航栏定义文件</code> 的文件中(代码放置位置自行调节)，例如 <code>Next主题</code> 位于 <code>themes/next/layout/_layout.swig</code> 并把href改为你的GitHub地址</p><h1 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h1><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 <code>Hexo</code> 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p><p>在 <code>Hexo</code> 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 <code>_config.yml</code> 将 <code>skip_render</code> 参数的值设置为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><h1 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h1><p>打开主题配置文件 <code>_config.yml</code> 搜索 <code>social_icons:</code> 在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制到对应的键值对</p><h1 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h1><p>打开 <code>\themes\next\layout\_partials\footer.swig</code> 文件,在copyright前加上：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后在合适的位置添加显示统计的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user-md"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在这里有两中不同计算方式的统计代码"><a href="#在这里有两中不同计算方式的统计代码" class="headerlink" title="在这里有两中不同计算方式的统计代码"></a>在这里有两中不同计算方式的统计代码</h2><h3 id="pv的方式，单个用户连续点击n篇文章，记录n次访问量"><a href="#pv的方式，单个用户连续点击n篇文章，记录n次访问量" class="headerlink" title="pv的方式，单个用户连续点击n篇文章，记录n次访问量"></a>pv的方式，单个用户连续点击n篇文章，记录n次访问量</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"><a href="#uv的方式，单个用户连续点击n篇文章，只记录1次访客数" class="headerlink" title="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"></a>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加之后再执行 <code>hexo d -g</code> 然后再刷新页面就能看到效果</p><h1 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h1><p>切换到根目录下，然后运行如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在 <code>/themes/next/layout/_partials/footer.swig</code> 文件尾部加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"theme-info"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span>博客全站共&#123;&#123; totalcount(site) &#125;&#125;字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h1><p>在根目录下安装 <code>hexo-wordcount</code> 运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在主题的配置文件中，配置如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: <span class="literal">true</span></span><br><span class="line">  wordcount: <span class="literal">true</span></span><br><span class="line">  min2read: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="每次-hexo-new-“My-New-Post”-生成默认的md文件格式"><a href="#每次-hexo-new-“My-New-Post”-生成默认的md文件格式" class="headerlink" title="每次 hexo new “My New Post” 生成默认的md文件格式"></a>每次 hexo new “My New Post” 生成默认的md文件格式</h1><p>在 <code>/scaffolds/post.md</code> 文件中修改默认格式</p><h1 id="隐藏网页底部powered-By-Hexo-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h1><p>打开 <code>themes/next/layout/_partials/footer.swig</code> 使用 <code>&lt;!-- --&gt;</code> 隐藏之间的代码即可，或者直接删除</p><h1 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h1><p>打开 <code>themes/next/layout/_partials/head.swig</code> 文件，在以下位置插入这样一段代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (prompt(<span class="string">'请输入访问密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">'访问失败'</span>);</span></span><br><span class="line"><span class="undefined">                history.back();</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在文章上定义键值对密码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">  - 标签</span><br><span class="line">category:</span><br><span class="line">  - 分类</span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">password: password</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h1><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> 在里面写下如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword2.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword1.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中 <code>url</code> 里面必须是 <code>ico</code> 图片，ico 图片可以上传到网上</p><h1 id="点击爆炸效果"><a href="#点击爆炸效果" class="headerlink" title="点击爆炸效果"></a>点击爆炸效果</h1><p>首先在 <code>themes/next/source/js/src</code> 里面建一个叫 <code>fireworks.js</code> 的文件，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>, a = anime.random(<span class="number">50</span>, <span class="number">180</span>), n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill()</span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span></span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">        e.animatables[t].target.draw()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">        n.push(createParticule(e, t))</span><br><span class="line">    &#125;</span><br><span class="line">    anime.timeline().add(&#123;</span><br><span class="line">        targets: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.x</span><br><span class="line">        &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.y</span><br><span class="line">        &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule</span><br><span class="line">    &#125;).add(&#123;</span><br><span class="line">        targets: a,</span><br><span class="line">        radius: anime.random(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">        lineWidth: <span class="number">0</span>,</span><br><span class="line">        alpha: &#123;<span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>)&#125;,</span><br><span class="line">        duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        easing: <span class="string">"easeOutExpo"</span>,</span><br><span class="line">        update: renderParticule,</span><br><span class="line">        offset: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="keyword">this</span>, i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            e.apply(n, i)</span><br><span class="line">        &#125;, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>), numberOfParticules = <span class="number">30</span>, pointerX = <span class="number">0</span>, pointerY = <span class="number">0</span>, tap = <span class="string">"mousedown"</span>, colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>], setCanvasSize = debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;, <span class="number">500</span>), render = anime(&#123;</span><br><span class="line">        duration: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY))</span><br><span class="line">    &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left, pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI / <span class="number">180</span>, a = anime.random(<span class="number">50</span>, <span class="number">180</span>), n = [<span class="number">-1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e, a.y = t, a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)], a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>), a.endPos = setParticuleDirection(a), a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.fillStyle = a.color, ctx.fill()</span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e, a.y = t, a.color = <span class="string">"#F00"</span>, a.radius = <span class="number">0.1</span>, a.alpha = <span class="number">0.5</span>, a.lineWidth = <span class="number">6</span>, a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.globalAlpha = a.alpha, ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>), ctx.lineWidth = a.lineWidth, ctx.strokeStyle = a.color, ctx.stroke(), ctx.globalAlpha = <span class="number">1</span></span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">        e.animatables[t].target.draw()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">        n.push(createParticule(e, t))</span><br><span class="line">    &#125;</span><br><span class="line">    anime.timeline().add(&#123;</span><br><span class="line">        targets: n, <span class="attr">x</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.x</span><br><span class="line">        &#125;, <span class="attr">y</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.y</span><br><span class="line">        &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.random(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">"easeOutExpo"</span>, <span class="attr">update</span>: renderParticule</span><br><span class="line">    &#125;).add(&#123;</span><br><span class="line">        targets: a,</span><br><span class="line">        radius: anime.random(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">        lineWidth: <span class="number">0</span>,</span><br><span class="line">        alpha: &#123;<span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">"linear"</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>)&#125;,</span><br><span class="line">        duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        easing: <span class="string">"easeOutExpo"</span>,</span><br><span class="line">        update: renderParticule,</span><br><span class="line">        offset: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="keyword">this</span>, i = <span class="built_in">arguments</span>;</span><br><span class="line">        clearTimeout(a), a = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            e.apply(n, i)</span><br><span class="line">        &#125;, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">"2d"</span>), numberOfParticules = <span class="number">30</span>, pointerX = <span class="number">0</span>, pointerY = <span class="number">0</span>, tap = <span class="string">"mousedown"</span>, colors = [<span class="string">"#FF1461"</span>, <span class="string">"#18FF92"</span>, <span class="string">"#5A87FF"</span>, <span class="string">"#FBF38C"</span>], setCanvasSize = debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth, canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight, canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">"px"</span>, canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">"px"</span>, canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;, <span class="number">500</span>), render = anime(&#123;</span><br><span class="line">        duration: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(tap, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="string">"sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"toggle-sidebar"</span> !== e.target.id &amp;&amp; <span class="string">"A"</span> !== e.target.nodeName &amp;&amp; <span class="string">"IMG"</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY))</span><br><span class="line">    &#125;, !<span class="number">1</span>), setCanvasSize(), <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">;</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/layout/_layout.swig</code> 在 <code>&lt;/body&gt;</code> 上面写下如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/fireworks.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Fireworks</span><br><span class="line">fireworks: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在右上角或者左上角实现fork-me-on-github&quot;&gt;&lt;a href=&quot;#在右上角或者左上角实现fork-me-on-github&quot; class=&quot;headerlink&quot; title=&quot;在右上角或者左上角实现fork me on github&quot;&gt;&lt;/a&gt;在右
      
    
    </summary>
    
      <category term="Hexo" scheme="http://zhuzhenglong233.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="http://zhuzhenglong233.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="http://zhuzhenglong233.github.io/tags/Hexo/"/>
    
      <category term="搭建博客" scheme="http://zhuzhenglong233.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Next" scheme="http://zhuzhenglong233.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客</title>
    <link href="http://zhuzhenglong233.github.io/2017/03/17/Hexo-build-blog/"/>
    <id>http://zhuzhenglong233.github.io/2017/03/17/Hexo-build-blog/</id>
    <published>2017-03-17T10:41:18.000Z</published>
    <updated>2018-07-09T09:13:03.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h2><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>是高效的静态站点生成框架，她基于Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的标签插件来快速的插入特定形式的内容，而且相对于其他框架，Hexo在速度上也有很大优势。</p><h2 id="搭建Node-js环境"><a href="#搭建Node-js环境" class="headerlink" title="搭建Node.js环境"></a>搭建Node.js环境</h2><p>我们了解到Hexo基于Node.js的，那么我们搭建博客网站首先需要安装Node.js环境。 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。</p><p><a href="https://nodejs.org/dist/v8.11.1/node-v8.11.1-x64.msi" target="_blank" rel="noopener">点击下载 Node.js</a></p><p>测试安装：命令行使用 <code>node -v</code> 和 <code>npm -v</code> 查看显示版本号即成功。</p><h2 id="安装Hexo博客框架工具"><a href="#安装Hexo博客框架工具" class="headerlink" title="安装Hexo博客框架工具"></a>安装Hexo博客框架工具</h2><p>Hexo是一个建站工具，可以帮助我们快速生成基本的博客文件，安装它需要在控制台下使用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="安装Git版本工具"><a href="#安装Git版本工具" class="headerlink" title="安装Git版本工具"></a>安装Git版本工具</h2><p>Git是目前世界上最流行的分布式版本控制系统，是的，没有之一。使用Git可以帮助我们把本地的网页和文章等内容提交到Gihub上，实现同步。</p><p><a href="https://github.com/git-for-windows/git/releases/download/v2.17.0.windows.1/Git-2.17.0-64-bit.exe" target="_blank" rel="noopener">点击下载 Git</a></p><p>Windows系统需下载，Mac系统因为自带Git无需操作。<br>测试安装：命令行使用 <code>git --version</code> 查看显示版本号即成功。</p><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><p>Github是一个面向开源及私有软件项目的托管平台，因为只支持 <em>git</em> 作为唯一的版本库格式进行托管，故名Github。这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用Github同步我们个人博客的相关文件。</p><p>注册地址： <a href="https://github.com/" target="_blank" rel="noopener">Github 官网</a><br>注册流程： <a href="https://www.baidu.com/" target="_blank" rel="noopener">百度一下,你就知道</a></p><h1 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h1><p>搭建我们的个人博客需要一个唯一的域名，当然我们可以申请购买一个域名来使用，但是在不是太必要的情况下，我们也可以通过Github Pages获得一个免费使用的域名，这需要我们在Github上新建一个仓库，如下：</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504192557.png" alt="Alt image"></p><p>勾选 <code>Initialize this repository with a README</code> 避免后面不必要的麻烦</p><p>其中的 <code>%username%</code> 替换成Github用户名</p><p>这个过程和建立普通的仓库没什么区别，关键在于新仓库的名字，一定要是 <code>%username%</code> +“github.io”的形式。这也是之前强调的要起一个好的用户名的原因。这样之后我们最后的博客网站的链接就会是：https://<code>%username%</code>.github.io的形式。<br>注意：固定新仓库的名字格式并非必须，只是这样操作生成的博客域名比较短小简洁，另起他名生成博客域名会很冗长。</p><p>点击Create Repository之后，随后选择Setting进入设置，找到Github Pages如下：</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504194332.png" alt="Alt image"></p><p>这里我们需要点击Choose a theme任意选择一个选择主题，然后界面会跳转到仓库，我们看到有两个文件如下：</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504194740.png" alt="Alt image"></p><p>此时若再查看Setting，我们会看到开启GitHub Pages之后得到的域名如下：</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504195040.png" alt="Alt image"></p><p>现在，我们就可以使用 https://<code>%username%</code>.github.io 访问自己的博客网站了，打开链接我们会看到默认主题的个人博客样式如下:</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504195406.png" alt="Alt image"></p><h1 id="创建本地博客站点"><a href="#创建本地博客站点" class="headerlink" title="创建本地博客站点"></a>创建本地博客站点</h1><p>上述的步骤相当于我们使用Github page，创建了一个默认的博客页，并且得到了一个可外部访问的域名。但是这个博客页很Low。我们的目的是创建自己个性化的博客网站，所以我们使用Hexo在本地先创建一个本地博客站点，优化后再把它部署到Github上。接下来我们使用控制台命令在本地一个合适的位置创建博客站点文件夹如下：</p><p>安装Hexo，在自己认为合适的地方创个文件夹，我是在E盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504200531.png" alt="Alt image"></p><p>输入 <code>npm install hexo -g</code> 开始安装Hexo</p><p>输入 <code>hexo -v</code> 检查Hexo是否安装成功</p><p>输入 <code>hexo init</code> 初始化该文件夹</p><p>看到后面的 <code>Start blogging with Hexo！</code> 表示成功</p><p>输入 <code>npm install</code> 安装所需要的组件</p><p>输入 <code>hexo g</code> g是generetor的缩写，生成博客</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504200153.png" alt="Alt image"></p><p>输入 <code>hexo s</code> s是server的缩写，启动服务，<a href="http://localhost:4000/" target="_blank" rel="noopener">访问该网址</a>，正式体验Hexo</p><p>问题：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入 <code>hexo server -p 端口号</code> 来改变端口号</p><h1 id="同步Github-允许公共访问"><a href="#同步Github-允许公共访问" class="headerlink" title="同步Github,允许公共访问"></a>同步Github,允许公共访问</h1><p>在本地我们已经搭建了博客，但是还只能自己本地访问。若要别人也能看到，那就需要我们将其同步部署到GitHub上了。还记得我们之前准备的Github仓库吗，这里就要用到了。<br>首先找到我们的博客仓库，并拷贝仓库地址：</p><p><img src="http://p87bi0e6z.bkt.clouddn.com/20180504202454.png" alt="Alt image"></p><p>修改本地博客根目录下的_config.yml文件，修改deploy下的配置如下：</p><p>修改repository值为上面拷贝的仓库地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:%username%/%username%.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>Git安装后，右键有 <code>Git Base Here</code> 在本地博客文件夹打开</p><p>将Hexo与Github page联系起来，设置Git的username和email</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Github用户名&quot;</span><br><span class="line">git config --global user.email &quot;Github绑定的邮箱&quot;</span><br></pre></td></tr></table></figure><p>输入 <code>cd ~/.ssh</code> 检查是否由.ssh的文件夹</p><p>输入 <code>ls</code> 列出该文件下的内容</p><p>输入 <code>ssh-keygen -t rsa -C “Github绑定的邮箱”</code> 连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：<code>C:\Users\Administrator\.ssh</code>）</p><p>输入 <code>eval &quot;$(ssh-agent -s)&quot;</code> 添加密钥到ssh-agent</p><p>输入 <code>ssh-add ~/.ssh/id_rsa</code> 添加生成的SSH key到ssh-agent</p><p>登录Github，点击头像下的Settings进入SSH and GPG keys选项，添加SSH keys</p><p>新建一个New SSH key，将id_rsa.pub文件里的内容复制上去</p><p>输入 <code>ssh -T git@github.com</code> 测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</p><p>新建一篇博客，用控制台定位到本地博客文件夹执行命令 <code>hexo new &quot;My New Post&quot;</code></p><p>这时候在文件夹_posts目录下将会看到已经创建的文件</p><p>在生成以及部署文章之前，需要安装一个扩展：<code>npm install hexo-deployer-git --save</code></p><p>使用编辑器编好文章，那么就可以使用命令： <code>hexo d -g</code> 生成以及部署了</p><p>部署成功后访问你的地址将看到生成的文章</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h2 id=&quot;了解Hexo&quot;&gt;&lt;a href=&quot;#了解Hexo&quot; class=&quot;headerlink&quot; title=&quot;了解Hex
      
    
    </summary>
    
      <category term="Hexo" scheme="http://zhuzhenglong233.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://zhuzhenglong233.github.io/tags/Hexo/"/>
    
      <category term="搭建博客" scheme="http://zhuzhenglong233.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Java集合总结</title>
    <link href="http://zhuzhenglong233.github.io/2016/11/12/Java%E9%9B%86%E5%90%88%E6%80%BB%E7%BB%93/"/>
    <id>http://zhuzhenglong233.github.io/2016/11/12/Java集合总结/</id>
    <published>2016-11-12T04:48:23.000Z</published>
    <updated>2018-07-09T09:13:10.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java集合类型"><a href="#Java集合类型" class="headerlink" title="Java集合类型"></a>Java集合类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java导包</span></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br></pre></td></tr></table></figure><h3 id="泛型集合前面的都是接口"><a href="#泛型集合前面的都是接口" class="headerlink" title="泛型集合前面的都是接口"></a>泛型集合前面的都是接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 泛型集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * K键泛型集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Map&lt;Integer, String&gt; map = <span class="keyword">new</span> HashMap&lt;Integer, String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Map添加数据</span></span><br><span class="line">map.put(Integer, String);<span class="comment">//put塞入的意思</span></span><br></pre></td></tr></table></figure><h3 id="集合前面的都是类"><a href="#集合前面的都是类" class="headerlink" title="集合前面的都是类"></a>集合前面的都是类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ArrayList array = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * K键集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Hashtable hashtable = <span class="keyword">new</span> Hashtable();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set集合//唯一//里面的值不能有重复的;重复添加不报错;会替换最后添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Set set = <span class="keyword">new</span> HashSet();</span><br></pre></td></tr></table></figure><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空集合数据</span></span><br><span class="line">list.clear();</span><br></pre></td></tr></table></figure><h2 id="ArrayList集合的应用"><a href="#ArrayList集合的应用" class="headerlink" title="ArrayList集合的应用"></a>ArrayList集合的应用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明集合</span></span><br><span class="line">List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//新增数据</span></span><br><span class="line">list.add(Object类型值).</span><br><span class="line">list.add(<span class="keyword">int</span> 索引号，值)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合个数</span></span><br><span class="line">list.size();<span class="comment">//长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据</span></span><br><span class="line">Object obj = (集合存储数据类型)list.get(<span class="keyword">int</span> i);<span class="comment">//get得到集合下标位置int 类型 i 的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式</span></span><br><span class="line">lis.remove(<span class="number">0</span>);<span class="comment">//删除索引第一个的数据</span></span><br><span class="line">lis.remove(Object类型值);<span class="comment">//按照指定的对象名删除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断集合中的对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.contains(集合存储数据类型对象))&#123;</span><br><span class="line"><span class="comment">//返回Boolean类型存在为true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历方式-调用集合数据里的对象方法"><a href="#遍历方式-调用集合数据里的对象方法" class="headerlink" title="遍历方式(调用集合数据里的对象方法)"></a>遍历方式(调用集合数据里的对象方法)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增强for循环</span></span><br><span class="line"><span class="keyword">for</span>(Object obj : list)&#123;</span><br><span class="line">((集合存储数据类型)obj).该对象拥有的方法;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.Size(); i++)&#123;</span><br><span class="line">Object obj = (集合存储数据类型)list.get(i);<span class="comment">//get得到集合下标位置的数据</span></span><br><span class="line">集合存储数据类型 字段名 = (集合存储数据类型)obj;<span class="comment">//拆箱</span></span><br><span class="line">字段名.该对象拥有的方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LinkedList集合的应用"><a href="#LinkedList集合的应用" class="headerlink" title="LinkedList集合的应用"></a>LinkedList集合的应用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明集合</span></span><br><span class="line">LinkedList list = <span class="keyword">new</span> LinkedList();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//新增数据(在ArrayList基础上新增方法)</span></span><br><span class="line">list.addFirst(Object类型值);<span class="comment">//新增到第一个位置</span></span><br><span class="line">list.addLast(Object类型值);<span class="comment">//新增到最后一个位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据(在ArrayList基础上新增方法)</span></span><br><span class="line">Object obj = (集合存储数据类型)list.getFirst();<span class="comment">//getFirst得到集合第一个位置的数据</span></span><br><span class="line">Object obj = (集合存储数据类型)list.getLast();<span class="comment">//getLast得到集合最后一个位置的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式(在ArrayList基础上新增方法)</span></span><br><span class="line">list.removeFirst();<span class="comment">//删除第一个对象</span></span><br><span class="line">list.removeLast();<span class="comment">//删除最后一个对象</span></span><br></pre></td></tr></table></figure><h2 id="K键"><a href="#K键" class="headerlink" title="K键"></a>K键</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断带K键的集合中的K键是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.containsKey(集合存储K键类型值))&#123;</span><br><span class="line"><span class="comment">//返回Boolean类型存在为true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断带K键的集合中的Value值是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.containsValue(集合存储Value类型值))&#123;</span><br><span class="line"><span class="comment">//返回Boolean类型存在为true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据</span></span><br><span class="line">集合存value储数据类型 value = (集合存储value数据类型)list.get(key);<span class="comment">//get得到集合指定的K键名的value 数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式</span></span><br><span class="line">lis.remove(集合存储K键类型值);<span class="comment">//按照指定的K键名删除对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//分别显示键集 / 值集 / 键值对集合</span></span><br><span class="line">list.keySet();<span class="comment">//键集</span></span><br><span class="line">list.values();<span class="comment">//值集</span></span><br><span class="line">list;<span class="comment">//键值对集合</span></span><br></pre></td></tr></table></figure><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Set keys = map.keySet();<span class="comment">//迭代器方式</span></span><br><span class="line">Iterator it = keys.iterator();<span class="comment">//获得Iterator对象</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">String key = (String)it.next();<span class="comment">//获得键名</span></span><br><span class="line">集合存value储数据类型 value = (集合存储value数据类型)list.get(key);<span class="comment">//get得到集合指定的K键名的value 数据</span></span><br><span class="line">value.该对象拥有的方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java集合类型&quot;&gt;&lt;a href=&quot;#Java集合类型&quot; class=&quot;headerlink&quot; title=&quot;Java集合类型&quot;&gt;&lt;/a&gt;Java集合类型&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="Java" scheme="http://zhuzhenglong233.github.io/categories/Java/"/>
    
      <category term="集合" scheme="http://zhuzhenglong233.github.io/categories/Java/%E9%9B%86%E5%90%88/"/>
    
    
      <category term="Java" scheme="http://zhuzhenglong233.github.io/tags/Java/"/>
    
      <category term="集合" scheme="http://zhuzhenglong233.github.io/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>如何解决JavaScript中0.1+0.2不等于0.3</title>
    <link href="http://zhuzhenglong233.github.io/2016/10/22/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3JavaScript%E4%B8%AD0-1-0-2%E4%B8%8D%E7%AD%89%E4%BA%8E0-3/"/>
    <id>http://zhuzhenglong233.github.io/2016/10/22/如何解决JavaScript中0-1-0-2不等于0-3/</id>
    <published>2016-10-22T03:43:25.000Z</published>
    <updated>2018-07-09T09:13:02.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何解决JavaScript中0-1-0-2不等于0-3"><a href="#如何解决JavaScript中0-1-0-2不等于0-3" class="headerlink" title="如何解决JavaScript中0.1+0.2不等于0.3"></a>如何解决JavaScript中0.1+0.2不等于0.3</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">0.1</span>+<span class="number">0.2</span>===<span class="number">0.3</span>);    <span class="comment">//true or false?</span></span><br></pre></td></tr></table></figure><p>在正常的数学逻辑思维中，0.1+0.2=0.3这个逻辑是正确的，但是在JavaScript中0.1+0.2!==0.3，这是为什么呢？这个问题也会偶尔被用来当做面试题来考查面试者对JavaScript的数值的理解程度</p><p>在JavaScript中的二进制的浮点数0.1和0.2并不是十分精确，在他们相加的结果并非正好等于0.3，而是一个比较接近的数字 0.30000000000000004 ，所以条件判断结果为 false</p><p>那么应该怎样来解决0.1+0.2等于0.3呢? 最好的方法是设置一个误差范围值，通常称为”机器精度“，而对于 JavaScript 来说，这个值通常是2^-52,而在 ES6 中，已经为我们提供了这样一个属性：Number.EPSILON，而这个值正等于2^-52。这个值非常非常小，在底层计算机已经帮我们运算好，并且无限接近0，但不等于0,。这个时候我们只要判断(0.1+0.2)-0.3小于Number.EPSILON，在这个误差的范围内就可以判定0.1+0.2===0.3为true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">numbersEqual</span>(<span class="params">a,b</span>)</span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.abs(a-b)&lt;<span class="built_in">Number</span>.EPSILON;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">var</span> a=<span class="number">0.1</span>+<span class="number">0.2</span>， b=<span class="number">0.3</span>;  </span><br><span class="line"><span class="built_in">console</span>.log(numbersEqual(a,b));    <span class="comment">//true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如何解决JavaScript中0-1-0-2不等于0-3&quot;&gt;&lt;a href=&quot;#如何解决JavaScript中0-1-0-2不等于0-3&quot; class=&quot;headerlink&quot; title=&quot;如何解决JavaScript中0.1+0.2不等于0.3&quot;&gt;&lt;/a&gt;如何
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://zhuzhenglong233.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://zhuzhenglong233.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 语法 API</title>
    <link href="http://zhuzhenglong233.github.io/2016/09/18/Markdown-Syntax-API/"/>
    <id>http://zhuzhenglong233.github.io/2016/09/18/Markdown-Syntax-API/</id>
    <published>2016-09-18T07:41:51.000Z</published>
    <updated>2018-07-09T09:13:11.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown：语法"><a href="#Markdown：语法" class="headerlink" title="Markdown：语法"></a>Markdown：语法</h1><h2 id="overview">概观</h2><h3 id="philosophy">哲学</h3><p>Markdown旨在尽可能易于阅读和易于编写。</p><p>但是，可读性强调一切。Markdown格式的文档应该以纯文本的形式发布，而不会看起来像标签或格式化指令。尽管Markdown的语法受到了几种现有的文本到HTML过滤器的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>， <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>， <a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>， <a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>，<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a>， 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a> ，Markdown语法的最大灵感来源是纯文本电子邮件的格式。</p><p>为此，Markdown的语法完全由标点字符组成，标点字符经过仔细选择以便看起来像他们的意思。 例如，一个词的星号实际上看起来像 *强调*。 Markdown列表看起来就像列表。 即使blockquotes看起来像引用的文本段落，假设你曾经使用过电子邮件。</p><h3 id="html">内联HTML</h3><p>Markdown的语法仅用于一个目的：用作网络 <em>书写</em> 的格式。</p><p>Markdown不是HTML的替代品，甚至不接近它。 它的语法非常小，仅对应于HTML标签的一小部分。 这个想法 <em>并不是</em> 创建一个使插入HTML标签更容易的语法。 在我看来，HTML标签已经很容易插入。 Markdown的想法是让阅读，写作和阅读变得容易编辑散文。 HTML是一种 <em>发布</em> 格式; Markdown是一种 <em>书写</em> 格式。 因此，Markdown的格式化语法只能解决以纯文本形式传达的问题。</p><p>对于Markdown语法未涉及的任何标记，您只需使用HTML本身。 没有必要在前言或分隔它以表明您正在从Markdown切换到HTML; 你只需使用标签。</p><p>唯一的限制是块级HTML元素 - 例如 <code>&lt;div&gt;</code>， <code>&lt;table&gt;</code>， <code>&lt;pre&gt;</code>， <code>&lt;p&gt;</code> 等等。必须通过空行将其与周围内容分开，并且块的开始和结束标记不应该用制表符或空格缩进。 Markdown足够智能，不会在HTML块级标签周围添加额外的（不需要的） <code>&lt;p&gt;</code> 标签。</p><p>例如，要将一个HTML表添加到Markdown文章中：</p><pre><code>这是一个正常的段落。</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Foo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>这是另一个常规段落。</code></pre><p>请注意，Markdown格式化语法不在块级HTML标记中处理。 例如，您不能在HTML块中使用Markdown风格 <code>*重点*</code>。</p><p>跨度级HTML标记 - 例如 <code>&lt;span&gt;</code>， <code>&lt;cite&gt;</code> 或 <code>&lt;del&gt;</code> - 可用于Markdown段落，列表项目或标题中的任何位置。 如果你愿意，你甚至可以使用HTML标签而不是Markdown格式; 例如 如果您希望使用HTML <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标记而不是Markdown的链接或图像语法，请继续前进。</p><p>与块级HTML标签不同，Markdown语法 <em>在</em> 跨度级别标签内处理。</p><h3 id="autoescape">自动转义特殊字符</h3><p>在HTML中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code>。 左尖括号用于启动标签; ＆符号用于表示HTML实体。 如果你想用它们作为文字字符，你必须将它们作为实体转义，例如 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p>特别是对于网络编写者来说，＆符号是很困难的。 如果你想写’AT&amp;T’，你需要写’<code>AT&amp;amp;T</code>‘。 您甚至需要在网址中跳过＆符号。 因此，如果你想链接到：</p><pre><code>http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>您需要将URL编码为：</p><pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code></pre><p>在你的锚标记 <code>href</code> 属性中。 不用说，这很容易被遗忘，并且可能是在其他标记良好的网站中最常见的HTML验证错误来源。</p><p>Markdown允许您自然使用这些角色，并为您处理所有必要的转义。 如果使用＆符号作为HTML实体的一部分，则它保持不变; 否则它将被翻译成 <code>&amp;amp;</code>。</p><p>所以，如果你想在你的文章中包含一个版权符号，你可以写：</p><pre><code>&amp;copy;</code></pre><p>Markdown将不再支持它。 但是如果你写：</p><pre><code>AT&amp;T</code></pre><p>Markdown会将其转化为：</p><pre><code>AT&amp;amp;T</code></pre><p>同样，由于Markdown支持 <a href="#html">嵌入式HTML</a>，因此如果您使用尖括号作为HTML标签的分隔符，Markdown会像这样对待它们。 但是如果你写：</p><pre><code>4 &lt; 5</code></pre><p>Markdown会将其转化为：</p><pre><code>4 &amp;lt; 5</code></pre><p>但是，在Markdown代码跨度和块内部，尖括号和＆符号 <em>总是</em> 自动编码。 这使得使用Markdown很容易编写HTML代码。 （与原始HTML相反，这是一种用于编写HTML语法的可怕格式，因为您的示例代码中的每个 <code>&lt;</code> 和 <code>&amp;</code> 都需要被转义。）</p><hr><h2 id="block">块元素</h2><h3 id="p">段落和换行符</h3><p>段落只是一个或多个连续的文本行，由一个或多个空行分隔。 （空白行是任何看起来像空行的行 - 只包含空格或制表符的行被认为是空白。）普通段落不应该用空格或制表符缩进。</p><p>“一条或多条连续文本”规则的含义是Markdown支持“硬包装”文本段落。 这与大多数其他文本到HTML格式化程序（包括Movable Type的“Convert Line Breaks”选项）有很大不同，它将段落中的每个换行符转换为一个 <code>&lt;br /&gt;</code> 标记。</p><p>当你 <em>想要</em> 使用Markdown插入一个 <code>&lt;br /&gt;</code> 中断标签时，可以用两个或多个空格结束一行，然后输入返回。</p><p>是的，这需要花费更多的努力来创建一个 <code>&lt;br /&gt;</code> ，但是一个简单的“每行换行符都是 <code>&lt;br /&gt;</code> ”规则对于Markdown来说不起作用。 Markdown的电子邮件风格的 <a href="#blockquote">块引用</a> 和多段 <a href="#list">列表项</a> 最适合 - 并且看起来更好 - 当您用严格的休息格式化它们时。</p><h3 id="header">头</h3><p>Markdown支持两种标题， <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>。</p><p>Setext风格的标题是使用等号（用于第一级标题）和破折号（用于第二级标题）的“下划线”。 例如：</p><pre><code>这是H1=============这是H2-------------</code></pre><p>任何数字的下划线 <code>=</code> 或 <code>-</code> 将起作用。</p><p>Atx风格的标题在行首使用1-6个哈希字符，对应于标题级别1-6。 例如：</p><pre><code># 这是H1## 这是H2###### 这是一个H6或者，你可以“关闭”atx风格的头文件。 这纯粹是美容 - 如果你认为它看起来更好，你可以使用它。 结束哈希值甚至不需要匹配用于打开头的哈希数。 （开放散列的数量确定标题级别。）：# 这是H1 ### 这是H2 ##### 这是一个H3 ######</code></pre><h3 id="blockquote">引用文字</h3><p>Markdown使用电子邮件风格的 <code>&gt;</code> 字符进行区块引用。如果您熟悉在电子邮件中引用文本段落，那么您知道如何在Markdown中创建块引用。它看起来最好，如果你硬包装的文本，并把 <code>&gt;</code> 每一行前：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt;&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown可以让你懒惰，只把 <code>&gt;</code> 放在硬包装段落的第一行之前：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>块引号可以通过添加额外的 <code>&gt;</code>来嵌套（即块引用）：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>Blockquotes可以包含其他Markdown元素，包括标题，列表和代码块：</p><pre><code>&gt; ## This is a header.&gt;&gt; 1.   This is the first list item.&gt; 2.   This is the second list item.&gt;&gt; Here&apos;s some example code:&gt;&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p>任何体面的文本编辑器都应该使电子邮件式引用变得容易。 例如，使用BBEdit，您可以进行选择并从文本菜单中选择“提高报价级别”。</p><h3 id="list">清单</h3><p>Markdown支持有序（编号）和无序（项目符号）列表。</p><p>无序列表使用星号，加号和连字符 - 可互换<br>– 作为列表标记：</p><pre><code>*   Red*   Green*   Blue</code></pre><p>相当于：</p><pre><code>+   Red+   Green+   Blue</code></pre><p>和：</p><pre><code>-   Red-   Green-   Blue</code></pre><p>有序列表使用数字后跟句点：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>请注意，用于标记列表的实际数字对Markdown产生的HTML输出没有影响。 从上面的列表产生的HTML Markdown是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>McHale<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Parish<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你改为在Markdown中写下这样的列表：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>甚至：</p><pre><code>3. Bird1. McHale8. Parish</code></pre><p>你会得到完全相同的HTML输出。 关键是，如果你愿意，你可以在你订购的Markdown列表中使用序号，以便你的源代码中的数字与发布的HTML中的数字相匹配。 但是如果你想懒惰，你不需要。</p><p>但是，如果确实使用懒惰列表编号，则仍应以数字1开始列表。在将来的某个时间，Markdown可能支持以任意数字开始的有序列表。</p><p>列表标记通常从左边界开始，但可以缩进最多三个空格。 列表标记后面必须跟一个或多个空格或制表符。</p><p>为了使列表看起来不错，您可以使用悬挂缩进来包装项目：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,    viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.    Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你想懒惰，你不必：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项以空行分隔，Markdown会将这些项目包装在HTML输出中的 <code>&lt;p&gt;</code> 标签中。 例如，这个输入：</p><pre><code>*   Bird*   Magic</code></pre><p>将变成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是这个：</p><pre><code>*   Bird*   Magic</code></pre><p>将变成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>列表项目可能由多个段落组成。 列表项中的每个后续段落都必须缩进4个空格或一个制表符：</p><pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor    sit amet, consectetuer adipiscing elit. Aliquam hendrerit    mi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreet    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum    sit amet velit.2.  Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>它看起来不错，如果你缩进后续段落的每一行，但在这里再一次，Markdown会让你变得懒惰：</p><pre><code>*   This is a list item with two paragraphs.    This is the second paragraph in the list item. You&apos;reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.*   Another item in the same list.</code></pre><p>要在列表项中放置一个块引用，需要缩进块引用的<code>&gt;</code>分隔符：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>要将代码块放在列表项中，代码块需要缩进 <em>两次</em> – 8个空格或两个制表符：</p><pre><code>*   A list item with a code block:        &lt;code goes here&gt;</code></pre><p>值得注意的是，有可能通过写这样的东西来偶然触发一个有序列表：</p><pre><code>1986. What a great season.</code></pre><p>换句话说，在一行的开始处的 <em>数字周期空间</em> 序列。 为了避免这种情况，您可以使用反斜杠来避开这段时间：</p><pre><code>1986\. What a great season.</code></pre><h3 id="precode">代码块</h3><p>预格式化的代码块用于编写有关编程或标记源代码。 而不是形成正常的段落，字面上解释代码块的行。 Markdown在 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签中包装了一个代码块。</p><p>要在Markdown中生成代码块，只需将块的每一行缩进至少4个空格或1个标签。 例如，给出这个输入：</p><pre><code>This is a normal paragraph:    This is a code block.</code></pre><p>Markdown将产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a normal paragraph:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>This is a code block.</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从代码块的每一行删除一级缩进 - 4个空格或1个制表符。 例如，这个：</p><pre><code>Here is an example of AppleScript:    tell application &quot;Foo&quot;        beep    end tell</code></pre><p>将变成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Here is an example of AppleScript:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>tell application "Foo"</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个代码块会一直持续到它没有缩进的一行（或文章结尾）。</p><p>在代码块中，＆符号（<code>&amp;</code>）和尖括号（<code>&lt;</code>和<code>&gt;</code>）会自动转换为HTML实体。 这使得使用Markdown包含示例HTML源代码变得非常简单 - 只需粘贴并缩进即可，Markdown将处理编码＆符号和尖括号的麻烦。 例如，这个：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将变成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;div class="footer"&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定期Markdown语法不在代码块内处理。 例如，星号只是代码块内的字面星号。 这意味着使用Markdown编写Markdown自己的语法也很容易。</p><h3 id="hr">横向规则</h3><p>您可以通过在一行上单独放置三个或更多连字符，星号或下划线来生成水平规则标签（<code>&lt;hr /&gt;</code>）。 如果你愿意，你可以在连字符或星号之间使用空格。 以下每一行都将生成一条水平线：</p><pre><code>* * *********- - ----------------------------------------</code></pre><hr><h2 id="span">跨度元素</h2><h3 id="link">链接</h3><p>Markdown支持两种链接： <em>内联</em> 和 <em>引用</em>。</p><p>在这两种样式中，链接文本都由[方括号]分隔。</p><p>要创建内联链接，请在链接文本的方括号之后立即使用一组常规括号。 在圆括号内，将链接指向的URL以及链接的 <em>可选</em> 标题放在引号中。 例如：</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>会产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/"</span> <span class="attr">title</span>=<span class="string">"Title"</span>&gt;</span></span><br><span class="line">an example<span class="tag">&lt;/<span class="name">a</span>&gt;</span> inline link.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.net/"</span>&gt;</span>This link<span class="tag">&lt;/<span class="name">a</span>&gt;</span> has no</span><br><span class="line">title attribute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果您指的是同一台服务器上的本地资源，则可以使用相对路径：</p><pre><code>See my [About](/about/) page for details.   </code></pre><p>引用样式链接使用第二组方括号，在其中放置您选择的标签以标识链接：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>您可以选择使用空格来分隔括号组：</p><pre><code>This is [an example] [id] reference-style link.</code></pre><p>然后，在文档的任何地方，您都可以像这样定义您的链接标签，并单独定义一行：</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code></pre><p>那是：</p><ul><li>Square brackets containing the link identifier (optionally<br>indented from the left margin using up to three spaces);</li><li>followed by a colon;</li><li>followed by one or more spaces (or tabs);</li><li>followed by the URL for the link;</li><li>optionally followed by a title attribute for the link, enclosed<br>in double or single quotes, or enclosed in parentheses.</li></ul><p>以下三个链接定义是等价的：</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &apos;Optional Title Here&apos;[foo]: http://example.com/  (Optional Title Here)</code></pre><p><strong>注意：</strong> Markdown.pl 1.0.1中有一个已知的错误，它可以防止使用单引号来分隔链接标题。</p><p>链接URL可以（可选）用尖括号包围：</p><pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</code></pre><p>您可以将title属性放在下一行，并使用额外的空格或制表符来填充，这对于更长的URL来说往往更好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    &quot;Optional Title Here&quot;</code></pre><p>链接定义仅用于在Markdown处理期间创建链接，并在HTML输出中从文档中剥离链接定义。</p><p>链接定义名称可能由字母，数字，空格和标点符号组成 - 但它们不区分大小写。 例如。 这两个链接：</p><pre><code>[link text][a][link text][A]</code></pre><p>是等同的。</p><p><em>隐含链接名称</em> 快捷方式允许您省略链接的名称，在这种情况下链接文本本身被用作名称。 只需使用一组空白的方括号 - 例如，将单词“Google”链接到google.com网站，您可以简单地编写：</p><pre><code>[Google][]</code></pre><p>然后定义链接：</p><pre><code>[Google]: http://google.com/</code></pre><p>由于链接名称可能包含空格，因此此快捷键甚至适用于链接文本中的多个单词：</p><pre><code>Visit [Daring Fireball][] for more information.</code></pre><p>然后定义链接：</p><pre><code>[Daring Fireball]: http://daringfireball.net/</code></pre><p>链接定义可以放置在Markdown文档的任何位置。 我倾向于在他们使用的每个段落之后立即放置它们，但是如果你愿意，可以将它们全部放在文档的末尾，有点像脚注。</p><p>以下是实际参考链接的示例：</p><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        &quot;Google&quot;  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;  [3]: http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>使用隐式链接名称快捷方式，可以改为编写：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        &quot;Google&quot;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>以上两个示例都会生成以下HTML输出：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I get 10 times more traffic from <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://google.com/"</span></span></span><br><span class="line"><span class="tag"><span class="attr">title</span>=<span class="string">"Google"</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span> than from</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://search.yahoo.com/"</span> <span class="attr">title</span>=<span class="string">"Yahoo Search"</span>&gt;</span>Yahoo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">or <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://search.msn.com/"</span> <span class="attr">title</span>=<span class="string">"MSN Search"</span>&gt;</span>MSN<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了比较，这里是使用Markdown的内联链接样式编写的同一段：</p><pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</code></pre><p>引用式链接的关键不在于它们更容易编写。 关键是，使用参考样式的链接，您的文档来源更具可读性。 比较上面的例子：使用参考样式的链接，该段本身只有81个字符长; 带有内联式链接，它有176个字符; 并作为原始HTML，它是234个字符。 在原始HTML中，标记多于文本。</p><p>使用Markdown的参考风格链接，源文档与浏览器中呈现的最终输出非常相似。 通过允许您将标记相关的元数据移出段落，您可以添加链接而不中断散文的叙述流程。</p><h3 id="em">重点</h3><p>Markdown将星号（<code>*</code>）和下划线（<code>_</code>）作为重点指标。 用一个 <code>*</code> 或 <code>_</code> 包裹的文本将用一个HTML <code>&lt;em&gt;</code> 标签包装; 用两个 <code>*</code> 或 <code>_</code> 将被包含一个HTML <code>&lt;strong&gt;</code> 标签。 例如，这个输入：</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>会产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single asterisks<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single underscores<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double asterisks<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double underscores<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可以使用你喜欢的任何风格; 唯一的限制是必须使用相同的字符来打开和关闭重点范围。</p><p>强调可以用在词的中间：</p><pre><code>un*frigging*believable</code></pre><p>但是如果用空格包围 <code>*</code> 或 <code>_</code> ，它将被视为文字星号或下划线。</p><p>要在原本用作强调分隔符的位置生成文字星号或下划线，可以使用反斜杠进行转义：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="code">代码</h3><p>为了表示一段代码，用反引号引起来（<code>`</code>）。 与预格式化代码块不同，代码范围指示正常段落内的代码。 例如：</p><pre><code>Use the `printf()` function.</code></pre><p>会产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Use the <span class="tag">&lt;<span class="name">code</span>&gt;</span>printf()<span class="tag">&lt;/<span class="name">code</span>&gt;</span> function.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要在代码范围内包含文字反引号字符，可以使用多个反引号作为开始和结束分隔符：</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>这将产生这样的结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>There is a literal backtick (`) here.<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码跨度周围的反引号分隔符可能包含空格 - 开放后一个，关闭之前一个。 这使您可以在代码范围的开头或结尾放置文字反引号字符：</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>会产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A single backtick in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A backtick-delimited string in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`foo`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过代码跨度，＆符号和尖括号会自动编码为HTML实体，这样可以轻松包含示例HTML标记。 Markdown会变成这样：</p><pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.</code></pre><p>成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Please don't use any <span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;blink&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span> tags.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可以写这个：</p><pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</code></pre><p>产生：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;amp;#8212;<span class="tag">&lt;/<span class="name">code</span>&gt;</span> is the decimal-encoded</span><br><span class="line">equivalent of <span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;amp;mdash;<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="img">图片</h3><p>无可否认，设计用于将图像置于纯文本文档格式的“自然”语法相当困难。</p><p>Markdown使用图像语法，旨在类似链接的语法，允许两种样式：<em>内联</em> 和 <em>引用</em>。</p><p>内联图像语法如下所示：</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>那是：</p><ul><li>感叹号： <code>!</code>;</li><li>然后是一组方括号，其中包含图像的 <code>alt</code> 属性文本;</li><li>接着是一组括号，其中包含图像的URL或路径，以及用双引号或单引号括起来的可选 <code>title</code> 属性。</li></ul><p>参考风格的图像语法如下所示：</p><pre><code>![Alt text][id]</code></pre><p>其中“id”是定义的图像引用的名称。 图像引用是使用与链接引用相同的语法定义的：</p><pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>在撰写本文时，Markdown没有指定图像尺寸的语法; 如果这对你来说很重要，你可以简单地使用普通的HTML标签 <code>&lt;img&gt;</code> 标签。</p><hr><h2 id="misc">杂项</h2><h3 id="autolink">自动链接</h3><p>Markdown支持创建URL和电子邮件地址的“自动”链接的快捷方式：只需使用尖括号围绕URL或电子邮件地址即可。 这意味着如果你想显示一个URL或电子邮件地址的实际文本，并且它也是一个可点击的链接，你可以这样做：</p><pre><code>&lt;http://example.com/&gt;</code></pre><p>Markdown将把它变成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://example.com/"</span>&gt;</span>http://example.com/<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>电子邮件地址的自动链接的工作方式与此类似，但Markdown还会执行一些随机化的十进制和十六进制实体编码，以帮助屏蔽地址收集spambots的地址。 例如，Markdown会变成这样：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>变成这样的东西：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;</span></span></span><br><span class="line"><span class="tag"><span class="string">&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;</span></span></span><br><span class="line"><span class="tag"><span class="string">&amp;#109;"</span>&gt;</span>&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;</span><br><span class="line">&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这将在浏览器中呈现为“<a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a>”的可点击链接。</p><p>（这种实体编码的技巧确实会欺骗很多（如果不是绝大多数）地址获取机器人，但它绝对不会欺骗所有这些机器人。总比没有好，但以这种方式发布的地址可能最终会开始接收 垃圾邮件。）</p><h3 id="backslash">反斜线转义</h3><p>Markdown允许您使用反斜线转义来生成文字字符，否则这些字符在Markdown的格式化语法中会有特殊含义。 例如，如果您想用文字星号（而不是HTML <code>&lt;em&gt;</code> 标签）标记单词，则可以在星号之前使用反斜杠，如下所示：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown为以下字符提供反斜杠转义符：</p><pre><code>\   backslash`   backtick*   asterisk_   underscore{}  curly braces[]  square brackets()  parentheses#   hash mark+    plus sign-    minus sign (hyphen).   dot!   exclamation mark</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Markdown：语法&quot;&gt;&lt;a href=&quot;#Markdown：语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown：语法&quot;&gt;&lt;/a&gt;Markdown：语法&lt;/h1&gt;&lt;h2 id=&quot;overview&quot;&gt;概观&lt;/h2&gt;

&lt;h3 id=&quot;ph
      
    
    </summary>
    
      <category term="API" scheme="http://zhuzhenglong233.github.io/categories/API/"/>
    
      <category term="Markdown" scheme="http://zhuzhenglong233.github.io/categories/API/Markdown/"/>
    
    
      <category term="API" scheme="http://zhuzhenglong233.github.io/tags/API/"/>
    
      <category term="Markdown" scheme="http://zhuzhenglong233.github.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
